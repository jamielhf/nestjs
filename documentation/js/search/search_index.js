var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/ActiveRegisterDto.html",[0,0.103,1,1.882]],["body/classes/ActiveRegisterDto.html",[0,0.172,1,2.35,2,1.544,3,0.204,4,0.18,5,0.18,6,2.119,7,0.391,8,1.421,9,2.311,10,2.944,11,2.562,12,0.686,13,0.023,14,1.901,15,2.35,16,3.326,17,0.888,18,3.111,19,4.205,20,4.205,21,4.205,22,4.205,23,4.205,24,3.947,25,3.111,26,0.46,27,2.346,28,2.346,29,2.346,30,1.787,31,2.346,32,2.119,33,1.938,34,2.346,35,0.336,36,1.658,37,4.845,38,2.35,39,1.658,40,2.346,41,2.346,42,2.346,43,1.938,44,0.01,45,0.014,46,0.01]],["title/classes/ApiException.html",[0,0.103,47,2.201]],["body/classes/ApiException.html",[0,0.103,2,1.748,3,0.231,4,0.204,5,0.204,7,0.442,8,1.549,12,0.852,13,0.022,14,1.866,17,1.239,26,0.432,35,0.231,44,0.011,45,0.015,46,0.011,47,2.995,48,2.999,49,2.995,50,4.129,51,2.951,52,6.507,53,6.159,54,1.228,55,5.884,56,5.884,57,1.275,58,4.809,59,4.995,60,5.884,61,5.884,62,4.809,63,0.899,64,0.666,65,0.848,66,3.522,67,3.522,68,1.158,69,3.522,70,0.476,71,3.522,72,2.023,73,2.999,74,2.193,75,3.522,76,4.809,77,4.809,78,1.379]],["title/controllers/AppController.html",[79,1.754,80,2.406]],["body/controllers/AppController.html",[0,0.115,3,0.258,4,0.228,5,0.228,7,0.494,9,1.342,13,0.023,14,1.128,15,2.758,17,1.042,24,2.974,26,0.52,35,0.258,44,0.012,45,0.016,46,0.012,54,1.322,63,1.004,64,0.744,65,0.947,68,1.247,70,0.532,78,1.485,79,2.57,80,3.526,81,1.825,82,3.349,83,5.178,84,6.152,85,3.932,86,3.932,87,3.932,88,2.974,89,3.932,90,3.932,91,3.349,92,3.932,93,3.349,94,3.932,95,2.678,96,2.965,97,1.952,98,1.424,99,2.095,100,2.965,101,3.349,102,3.349,103,3.932,104,3.932,105,3.932,106,3.932,107,3.932,108,3.932,109,3.349,110,3.349]],["title/modules/AppModule.html",[111,0.802,112,2.406]],["body/modules/AppModule.html",[0,0.094,3,0.211,4,0.186,5,0.186,12,0.5,13,0.023,17,0.647,26,0.582,35,0.211,44,0.01,45,0.014,46,0.01,54,0.821,63,0.821,64,0.608,65,0.775,68,0.775,70,0.435,80,3.075,81,1.493,98,2.159,99,1.713,111,1.185,112,4.758,113,1.165,114,1.236,115,1.399,116,1.399,117,1.236,118,2.133,119,1.314,120,2.739,121,2.739,122,2.739,123,3.293,124,3.55,125,3.849,126,3.713,127,3.713,128,1.965,129,1.399,130,1.399,131,3.216,132,2.242,133,2.739,134,4.515,135,5.659,136,3.216,137,4.515,138,2.003,139,3.216,140,3.216,141,3.216,142,3.216,143,2.739,144,2.425,145,3.216,146,3.216,147,3.216,148,3.216,149,3.216,150,2.739,151,3.216,152,3.216,153,3.216]],["title/injectables/AppService.html",[126,2.201,154,0.627]],["body/injectables/AppService.html",[0,0.141,3,0.316,4,0.279,5,0.279,7,0.606,13,0.022,14,1.691,17,0.971,26,0.433,35,0.316,44,0.015,45,0.018,46,0.015,54,1.506,68,1.162,70,0.652,78,1.384,109,4.109,110,4.109,126,3.672,154,1.047,155,1.747,156,4.109,157,6.632,158,4.825]],["title/controllers/ArticleController.html",[79,1.754,159,2.406]],["body/controllers/ArticleController.html",[0,0.152,3,0.341,4,0.301,5,0.301,13,0.022,26,0.466,35,0.341,44,0.016,45,0.019,46,0.016,70,0.703,79,2.579,81,2.412,159,4.199,160,4.425,161,3.918,162,5.196,163,5.196]],["title/modules/ArticleModule.html",[111,0.802,164,2.201]],["body/modules/ArticleModule.html",[0,0.111,3,0.25,4,0.221,5,0.221,13,0.023,26,0.512,35,0.25,44,0.012,45,0.016,46,0.012,64,0.721,70,0.516,81,2.355,111,1.295,113,1.381,114,1.467,115,1.66,116,1.66,117,1.467,118,2.331,119,2.074,128,2.208,129,1.66,130,1.66,159,3.884,164,4.137,165,3.249,166,3.249,167,3.249,168,4.331,169,3.814,170,2.191,171,1.894,172,2.914,173,2.704,174,2.598,175,2.598,176,2.191,177,2.598,178,3.814,179,2.914,180,2.598,181,2.376,182,2.191,183,1.467,184,2.191,185,2.191,186,2.032,187,3.814,188,3.814,189,3.814,190,3.814]],["title/injectables/ArticleService.html",[154,0.627,168,2.201]],["body/injectables/ArticleService.html",[0,0.153,3,0.344,4,0.304,5,0.304,13,0.022,26,0.471,35,0.344,44,0.016,45,0.019,46,0.016,70,0.709,154,1.1,155,1.899,168,3.86,191,4.466]],["title/controllers/AuthController.html",[79,1.754,192,2.406]],["body/controllers/AuthController.html",[0,0.076,1,2.47,3,0.171,4,0.151,5,0.151,7,0.328,9,1.325,12,0.604,13,0.023,15,2.924,17,1.104,26,0.516,35,0.171,36,1.39,39,2.47,44,0.012,45,0.012,46,0.008,51,1.211,54,0.991,63,1.402,64,1.038,65,1.322,68,1.322,70,0.353,78,1.472,79,1.295,81,1.211,88,2.229,91,2.222,93,2.222,95,4.057,96,1.967,97,1.295,98,1.406,99,1.39,100,1.967,161,1.967,192,2.644,193,2.222,194,2.609,195,3.121,196,3.306,197,3.306,198,3.306,199,3.882,200,2.927,201,2.609,202,3.882,203,2.609,204,3.871,205,2.609,206,3.871,207,3.496,208,3.882,209,2.609,210,2.609,211,3.882,212,2.609,213,2.609,214,2.609,215,2.609,216,2.609,217,3.882,218,2.609,219,2.609,220,2.609,221,2.609,222,2.644,223,2.47,224,1.967,225,2.222,226,1.777,227,1.625,228,2.609,229,2.609,230,2.609,231,1.135,232,2.948,233,2.609,234,2.609,235,2.609,236,2.609,237,2.609,238,2.609,239,2.609,240,2.609,241,2.609,242,2.609,243,2.609,244,2.609,245,3.882,246,2.609,247,2.609,248,2.609,249,2.609,250,2.609,251,2.609]],["title/modules/AuthModule.html",[111,0.802,252,2.201]],["body/modules/AuthModule.html",[0,0.085,3,0.19,4,0.168,5,0.168,13,0.023,26,0.593,35,0.19,44,0.009,45,0.013,46,0.009,64,0.548,70,0.392,81,1.346,97,1.439,98,2.075,99,1.544,111,1.119,113,1.05,114,1.115,115,1.261,116,1.261,117,1.115,118,2.014,119,2.014,123,3.182,128,1.825,129,1.261,130,1.261,132,2.082,144,2.186,170,1.665,171,1.439,172,2.408,173,2.234,174,1.974,175,1.974,176,1.665,177,1.974,179,2.408,180,1.974,181,1.805,182,1.665,183,1.115,184,1.665,185,1.665,186,1.544,192,2.856,223,3.559,224,2.186,252,4.311,253,2.469,254,2.469,255,2.469,256,2.469,257,3.43,258,3.568,259,3.719,260,2.899,261,2.899,262,2.899,263,2.899,264,2.899,265,2.469,266,3.572,267,2.469,268,1.974,269,1.805,270,2.469,271,2.899,272,2.469,273,1.805,274,2.186,275,2.469,276,2.469,277,2.899,278,2.899,279,2.899]],["title/injectables/AuthService.html",[154,0.627,223,1.882]],["body/injectables/AuthService.html",[0,0.048,1,1.833,3,0.108,4,0.095,5,0.095,7,0.206,9,1.36,10,1.976,11,1.733,12,0.685,13,0.023,14,1.357,17,0.952,24,2.288,26,0.5,35,0.108,36,2.123,38,2.782,39,2.123,43,1.024,44,0.011,45,0.008,46,0.005,47,1.024,50,1.24,51,1.849,54,0.69,57,0.979,59,1.24,63,1.124,64,0.832,65,1.06,68,1.14,70,0.222,72,0.944,73,1.401,74,2.947,78,1.551,98,1.246,99,0.876,101,1.401,154,0.48,155,0.596,183,1.819,195,2.835,196,2.302,197,2.302,198,2.302,207,1.12,222,1.841,223,2.123,225,1.401,231,2.176,232,3.107,268,1.12,273,2.143,280,1.401,281,3.984,282,2.702,283,1.644,284,2.521,285,5,286,1.841,287,1.976,288,1.644,289,1.644,290,1.644,291,3.793,292,2.702,293,1.644,294,3.393,295,1.644,296,1.644,297,1.644,298,2.702,299,1.644,300,1.841,301,1.401,302,1.644,303,1.644,304,1.644,305,1.644,306,1.24,307,1.24,308,1.24,309,1.644,310,1.644,311,1.644,312,1.644,313,2.288,314,1.644,315,4.402,316,1.644,317,1.644,318,1.644,319,3.568,320,3.44,321,2.702,322,1.644,323,1.401,324,1.644,325,1.644,326,1.683,327,1.644,328,1.644,329,1.644,330,3.771,331,2.482,332,1.644,333,1.644,334,1.644,335,1.644,336,1.644,337,1.644,338,1.644,339,1.644,340,1.644,341,2.302,342,2.702,343,1.644,344,1.644,345,1.644,346,1.644,347,1.644,348,2.302,349,2.038,350,1.644,351,2.038,352,2.302,353,2.702,354,1.644,355,1.644,356,1.644,357,1.644,358,1.644,359,1.644,360,1.644,361,1.644,362,1.024]],["title/interfaces/BaseInterface.html",[363,1.64,364,2.406]],["body/interfaces/BaseInterface.html",[3,0.294,4,0.26,5,0.26,7,0.563,8,1.815,12,0.959,13,0.022,14,1.767,35,0.294,44,0.014,45,0.017,46,0.014,171,3.374,363,2.082,364,3.838,365,2.793,366,3.82,367,6.464,368,5.672,369,6.464,370,3.838]],["title/injectables/BaseService.html",[154,0.627,371,2.406]],["body/injectables/BaseService.html",[0,0.088,3,0.199,4,0.175,5,0.175,7,0.38,8,1.394,13,0.023,17,1.22,26,0.453,35,0.199,44,0.009,45,0.013,46,0.009,54,1.105,57,1.829,63,1.29,64,0.955,65,1.216,68,1.503,70,0.41,78,1.58,95,3.752,154,0.768,155,1.097,195,3.126,232,3.164,291,2.063,300,4.487,313,2.486,326,3.145,371,3.969,372,2.58,373,4.693,374,3.686,375,4.693,376,3.686,377,3.686,378,3.029,379,3.686,380,3.029,381,3.029,382,3.686,383,3.029,384,2.58,385,3.029,386,3.029,387,2.58,388,1.887,389,2.063,390,3.029,391,3.029,392,3.029,393,3.029,394,3.029,395,3.029]],["title/modules/CommonModule.html",[111,0.802,123,1.882]],["body/modules/CommonModule.html",[0,0.12,3,0.269,4,0.237,5,0.237,13,0.022,26,0.53,35,0.269,44,0.013,45,0.017,46,0.013,70,0.554,98,2.405,111,1.341,113,1.485,114,1.577,115,1.784,116,1.784,117,1.577,118,2.415,119,2.415,123,3.69,128,2.315,129,1.784,130,1.784,132,2.642,396,3.492,397,3.492,398,3.492,399,4.101,400,4.408,401,4.101,402,4.101,403,3.492]],["title/modules/ConfigModule.html",[111,0.802,404,2.201]],["body/modules/ConfigModule.html",[0,0.128,3,0.287,4,0.254,5,0.254,13,0.022,26,0.498,35,0.287,44,0.014,45,0.017,46,0.014,70,0.593,111,1.384,113,1.587,114,1.685,115,1.907,116,1.907,117,1.685,118,2.27,119,2.492,128,2.416,129,1.907,130,1.907,331,2.176,404,4.119,405,3.733,406,3.733,407,3.7,408,4.382,409,4.382,410,3.733,411,3.733,412,4.382,413,3.733]],["title/classes/ConfigService.html",[0,0.103,407,1.882]],["body/classes/ConfigService.html",[0,0.071,2,1.2,3,0.158,4,0.14,5,0.14,7,0.303,8,1.18,9,1.511,10,1.388,12,0.87,13,0.023,14,1.757,17,1.125,26,0.397,35,0.24,44,0.008,45,0.011,46,0.008,51,2.594,54,0.936,57,0.875,63,1.262,64,0.934,65,1.19,68,1.346,72,2.542,78,1.417,181,2.282,186,2.632,200,1.822,231,1.926,313,1.388,326,1.505,330,1.822,331,1.2,407,2.358,414,1.822,415,5.544,416,3.665,417,3.665,418,3.665,419,3.665,420,4.427,421,3.665,422,3.665,423,2.417,424,2.417,425,3.665,426,2.417,427,2.417,428,3.665,429,2.417,430,3.665,431,3.121,432,2.763,433,3.665,434,3.665,435,3.121,436,3.665,437,3.665,438,2.496,439,3.665,440,2.417,441,2.417,442,3.121,443,2.058,444,2.058,445,3.665,446,2.058,447,2.417,448,2.417,449,2.417,450,2.417,451,2.417,452,2.417,453,2.417,454,2.417,455,2.417,456,2.417,457,2.417,458,2.417,459,2.058,460,2.417,461,2.417,462,1.646,463,2.417,464,2.417,465,2.417,466,2.417,467,6.346,468,2.417,469,2.417,470,2.417,471,2.417,472,2.417,473,2.417,474,2.417,475,2.417,476,2.417,477,2.417,478,1.822,479,3.665,480,2.417,481,2.417,482,2.417,483,2.417,484,1.646,485,2.417,486,2.417,487,2.417,488,2.417,489,3.665,490,2.417,491,2.417,492,2.417,493,2.417]],["title/modules/CoreModule.html",[111,0.802,124,2.029]],["body/modules/CoreModule.html",[0,0.082,3,0.185,4,0.163,5,0.163,11,1.227,12,0.439,13,0.023,26,0.509,35,0.185,38,1.503,44,0.009,45,0.013,46,0.009,64,0.533,70,0.381,78,1.179,111,1.101,113,1.021,114,1.084,115,1.227,116,1.227,117,1.084,118,1.153,119,1.68,124,3.724,128,1.789,129,1.227,130,1.227,132,2.646,170,1.62,171,1.4,172,2.361,173,2.19,174,1.921,175,1.921,176,1.62,179,2.361,180,1.921,181,1.757,182,1.62,183,1.581,184,1.62,185,1.62,186,1.503,231,1.227,286,1.921,362,3.32,388,1.757,404,4.178,407,3.019,462,2.8,494,2.402,495,2.402,496,2.402,497,4.092,498,2.821,499,2.821,500,2.821,501,2.821,502,2.821,503,2.821,504,2.402,505,2.821,506,2.821,507,3.501,508,2.402,509,2.56,510,2.821,511,2.821,512,2.821,513,2.821,514,2.821,515,2.821,516,2.821,517,2.821,518,2.821,519,2.821,520,1.757,521,3.1,522,2.821,523,2.821,524,2.821,525,2.821,526,2.821,527,2.127,528,2.821,529,2.821,530,2.127,531,2.821,532,2.127,533,2.821,534,2.127,535,2.821,536,2.127,537,2.821]],["title/modules/FeatureModule.html",[111,0.802,125,2.201]],["body/modules/FeatureModule.html",[0,0.108,3,0.242,4,0.214,5,0.214,13,0.022,26,0.562,35,0.242,44,0.011,45,0.015,46,0.011,70,0.499,98,1.337,99,1.967,111,1.274,113,1.337,114,1.419,115,1.606,116,1.606,117,1.419,118,1.509,119,2.293,125,4.366,128,2.16,129,1.606,130,1.606,132,2.465,164,4.339,252,4.339,257,4.001,265,3.144,538,3.144,539,3.692,540,3.144,541,3.692,542,3.692,543,3.692]],["title/classes/HttpExceptionFilter.html",[0,0.103,544,2.664]],["body/classes/HttpExceptionFilter.html",[0,0.095,2,1.619,3,0.214,4,0.189,5,0.189,7,0.409,12,0.507,13,0.023,17,0.656,24,2.619,26,0.472,35,0.214,44,0.01,45,0.014,46,0.01,47,2.84,50,3.965,54,1.165,63,0.833,64,0.617,65,0.786,68,0.786,70,0.441,78,0.935,138,2.031,226,3.106,227,2.031,231,2.477,319,3.965,349,4.682,351,3.965,509,3.275,520,2.031,544,3.439,545,3.884,546,2.778,547,3.439,548,5.258,549,4.56,550,5.258,551,3.261,552,4.56,553,3.261,554,3.261,555,4.081,556,3.261,557,3.261,558,3.261,559,3.261,560,3.261,561,3.261,562,5.694,563,3.261,564,3.261,565,3.261,566,3.261,567,4.56,568,3.261,569,3.261,570,3.261,571,3.261,572,3.261,573,3.261,574,5.258,575,5.258,576,3.261,577,3.261,578,3.261]],["title/interfaces/IOption.html",[363,1.64,579,2.201]],["body/interfaces/IOption.html",[3,0.237,4,0.21,5,0.21,7,0.455,8,1.578,12,1.02,13,0.023,14,1.992,35,0.321,44,0.011,45,0.015,46,0.011,183,1.392,204,3.696,362,2.256,363,2.275,365,2.256,370,3.46,462,4.054,484,4.366,509,3.707,520,2.256,527,3.696,530,4.488,532,4.488,534,2.731,536,4.488,579,3.052,580,2.731,581,4.901,582,3.085,583,3.085,584,3.085,585,2.256,586,3.085,587,3.085,588,3.085,589,3.085,590,3.085,591,2.731,592,3.085,593,3.696,594,3.085,595,3.696]],["title/interfaces/ISendMail.html",[363,1.64,585,2.201]],["body/interfaces/ISendMail.html",[3,0.244,4,0.215,5,0.215,7,0.466,8,1.606,12,0.976,13,0.023,14,2.055,35,0.327,44,0.012,45,0.015,46,0.012,65,1.449,183,1.429,204,3.76,362,2.314,363,2.314,365,2.314,370,2.314,462,2.531,484,3.396,509,2.314,520,2.314,527,3.76,530,2.802,532,2.802,534,2.802,536,2.802,579,2.314,580,2.802,582,3.165,583,3.165,584,3.165,585,3.106,586,3.165,587,3.165,588,3.165,589,3.165,590,3.165,591,4.535,592,3.165,593,4.731,594,3.165,595,4.731]],["title/injectables/JwtStrategy.html",[154,0.627,258,2.201]],["body/injectables/JwtStrategy.html",[0,0.118,3,0.265,4,0.234,5,0.234,7,0.507,11,1.759,12,0.629,13,0.023,17,1.061,26,0.558,35,0.265,44,0.013,45,0.016,46,0.013,49,2.518,54,1.347,57,2.125,63,1.032,64,0.765,65,0.974,68,0.974,70,0.547,78,1.159,97,2.007,154,0.936,155,1.464,195,2.724,258,3.284,269,2.518,270,3.443,274,3.048,520,2.518,596,3.443,597,4.491,598,4.043,599,5.273,600,4.043,601,4.043,602,4.043,603,3.443,604,3.048,605,3.048,606,3.443,607,3.443,608,3.048,609,4.043,610,4.043,611,4.043,612,4.043,613,4.043,614,4.043,615,4.043]],["title/injectables/LocalStrategy.html",[154,0.627,259,2.201]],["body/injectables/LocalStrategy.html",[0,0.11,3,0.246,4,0.217,5,0.217,7,0.471,9,1.281,11,1.632,12,0.781,13,0.022,14,1.858,17,1.01,26,0.542,35,0.246,38,3.217,44,0.012,45,0.016,46,0.012,49,2.337,54,1.282,57,1.359,63,1.282,64,0.949,65,1.209,68,0.904,70,0.507,78,1.076,97,1.863,100,2.829,154,0.891,155,1.359,183,2.175,195,2.625,223,3.451,224,2.829,231,1.632,232,2.155,259,3.126,300,3.418,301,4.275,330,2.829,331,1.863,597,4.275,603,3.196,604,2.829,606,3.196,607,3.196,608,2.829,616,3.196,617,3.752,618,3.752,619,5.019,620,3.752,621,3.196,622,3.752,623,3.752]],["title/injectables/LogServive.html",[98,1.28,154,0.627]],["body/injectables/LogServive.html",[0,0.091,3,0.29,4,0.181,5,0.181,7,0.393,8,1.426,9,1.755,12,0.918,13,0.023,17,1.034,26,0.461,35,0.205,44,0.01,45,0.014,46,0.01,51,2.386,54,1.131,57,1.862,63,0.799,64,0.592,65,0.753,68,0.753,70,0.423,72,1.797,88,2.952,98,1.604,133,3.772,138,1.948,150,2.664,154,0.786,155,1.133,222,3.501,349,2.359,362,3.482,438,2.13,624,2.664,625,4.761,626,4.428,627,4.428,628,4.428,629,3.128,630,3.128,631,2.664,632,3.128,633,3.772,634,5.59,635,5.9,636,5.141,637,5.141,638,3.128,639,5.141,640,5.141,641,5.141,642,5.141,643,5.141,644,5.59,645,3.128,646,5.59,647,3.128,648,3.128,649,3.128,650,5.141,651,3.128,652,3.128,653,3.128,654,3.128,655,3.128,656,3.128]],["title/injectables/LoggerMiddleware.html",[127,2.201,154,0.627]],["body/injectables/LoggerMiddleware.html",[0,0.115,3,0.258,4,0.228,5,0.228,7,0.494,9,1.342,12,0.806,13,0.022,17,1.042,26,0.52,35,0.258,44,0.012,45,0.016,46,0.012,51,1.825,54,1.322,57,1.875,63,1.322,64,0.979,65,1.247,68,0.947,70,0.532,88,2.258,98,2.228,99,2.095,127,3.225,138,2.449,154,0.919,155,1.424,206,4.639,207,3.943,222,3.526,226,4.19,227,2.449,547,2.965,555,4.19,657,3.349,658,4.41,659,3.932,660,3.932,661,4.41,662,4.365,663,3.932,664,4.41,665,5.178,666,3.932,667,3.932]],["title/classes/LoginDto.html",[0,0.103,36,1.882]],["body/classes/LoginDto.html",[0,0.172,1,1.658,2,1.544,3,0.204,4,0.18,5,0.18,6,2.119,7,0.391,8,1.421,9,2.311,10,1.787,11,2.562,12,0.686,13,0.023,14,1.901,15,2.35,16,3.326,17,0.888,19,4.205,20,4.205,21,4.205,22,4.205,23,4.205,24,3.947,26,0.46,27,2.346,28,2.346,29,2.346,30,1.787,31,2.346,32,2.119,33,1.938,34,2.346,35,0.336,36,2.35,37,4.845,38,2.971,39,1.658,40,2.346,41,2.346,42,2.346,43,1.938,44,0.01,45,0.014,46,0.01,668,3.111,669,3.111]],["title/injectables/MailService.html",[154,0.627,287,2.029]],["body/injectables/MailService.html",[0,0.088,3,0.198,4,0.175,5,0.175,7,0.379,8,1.391,9,2.275,11,2.394,12,0.906,13,0.023,14,1.975,17,1.171,26,0.453,35,0.198,44,0.009,45,0.013,46,0.009,51,3.093,54,1.103,57,1.564,63,1.103,64,1.245,65,1.041,68,0.728,70,0.408,78,1.239,154,0.767,155,1.094,195,2.341,231,2.194,232,1.735,286,2.942,287,2.481,294,4.295,341,2.573,351,2.278,352,3.679,407,3.322,509,3.141,591,3.257,595,3.257,670,2.573,671,4.32,672,3.021,673,3.427,674,4.32,675,4.32,676,3.021,677,3.021,678,3.021,679,3.021,680,3.021,681,5.043,682,3.021,683,3.021,684,3.021,685,4.32,686,3.021,687,3.021]],["title/modules/MailerModule.html",[111,0.802,497,2.201]],["body/modules/MailerModule.html",[0,0.092,3,0.206,4,0.182,5,0.182,12,0.802,13,0.023,17,0.895,26,0.399,35,0.206,44,0.01,45,0.014,46,0.01,54,0.803,63,1.431,64,1.06,65,1.071,68,1.071,70,0.425,78,1.275,111,1.272,113,1.139,118,1.817,119,1.817,132,1.561,170,1.806,171,1.561,172,2.553,173,2.368,176,1.806,179,1.806,182,2.961,183,1.209,184,1.806,185,1.806,186,1.676,313,2.553,410,3.786,411,2.679,497,3.49,507,2.679,521,2.372,633,2.679,673,3.682,688,3.145,689,5.604,690,3.145,691,4.445,692,5.912,693,3.145,694,5.912,695,5.912,696,3.145,697,4.445,698,3.145,699,4.445,700,3.145,701,3.145,702,3.145,703,3.145,704,3.145,705,3.145,706,3.145,707,3.145,708,3.145]],["title/injectables/MailerService.html",[154,0.627,673,2.201]],["body/injectables/MailerService.html",[0,0.099,3,0.307,4,0.197,5,0.197,7,0.426,8,1.511,9,1.16,12,0.836,13,0.023,17,1.081,26,0.421,35,0.223,44,0.011,45,0.015,46,0.011,54,1.198,57,1.23,63,1.198,64,0.887,65,1.13,68,1.13,70,0.459,72,2.694,78,0.974,154,0.833,155,1.23,195,2.494,231,1.478,313,1.951,326,2.115,331,1.686,431,2.893,521,2.561,579,3.609,585,3.609,625,4.576,673,3.347,709,2.561,710,5.373,711,4.691,712,3.397,713,4.691,714,4.691,715,3.397,716,3.397,717,4.691,718,2.313,719,2.893,720,3.397,721,3.397,722,3.397,723,3.397,724,3.397,725,3.397,726,3.397,727,3.397,728,3.397,729,3.397,730,3.397,731,3.397,732,4.691,733,3.397,734,3.397,735,3.397,736,3.397,737,3.397,738,3.397,739,3.397,740,3.397]],["title/classes/ResgisterDto.html",[0,0.103,39,1.882]],["body/classes/ResgisterDto.html",[0,0.167,1,1.533,2,1.428,3,0.189,4,0.167,5,0.167,6,1.96,7,0.361,8,1.343,9,2.347,10,1.652,11,2.485,12,0.837,13,0.023,14,1.913,15,2.867,16,4.057,17,1.083,19,4.057,20,4.057,21,4.057,22,4.057,23,4.057,24,3.949,26,0.44,27,2.169,28,2.169,29,2.169,30,1.652,31,2.169,32,1.96,33,1.792,34,2.169,35,0.322,36,1.533,37,4.745,38,2.867,39,2.222,40,3.145,41,3.699,42,3.145,43,3.056,44,0.009,45,0.013,46,0.009,741,2.877,742,2.877,743,2.877,744,2.877]],["title/modules/ServicesModule.html",[111,0.802,400,2.201]],["body/modules/ServicesModule.html",[0,0.11,3,0.246,4,0.217,5,0.217,13,0.023,26,0.508,35,0.246,44,0.012,45,0.016,46,0.012,64,0.949,70,0.507,111,1.284,113,1.359,114,1.443,115,1.632,116,1.632,117,1.443,118,2.311,119,2.311,124,3.615,128,2.184,129,1.632,130,1.632,132,1.863,143,3.196,170,2.155,171,1.863,172,2.883,173,2.674,176,2.155,177,3.418,179,2.155,182,2.155,183,1.443,184,2.155,185,2.155,186,1.999,287,4.011,400,4.239,745,3.196,746,3.752,747,3.196,748,3.196,749,3.752,750,3.752,751,3.752,752,3.752,753,3.752,754,3.752]],["title/injectables/TestMiddleware.html",[154,0.627,755,2.664]],["body/injectables/TestMiddleware.html",[0,0.121,3,0.271,4,0.239,5,0.239,7,0.518,12,0.643,13,0.022,17,1.076,26,0.532,35,0.271,44,0.013,45,0.017,46,0.013,54,1.365,57,2.147,63,1.055,64,0.781,65,0.995,68,0.995,70,0.558,88,2.372,98,1.496,138,2.572,154,0.949,155,1.496,206,4.727,207,4.038,226,4.27,227,2.572,403,3.518,547,3.114,555,4.27,658,4.554,661,4.554,662,4.47,664,4.554,755,4.031,756,3.518,757,4.13,758,4.13,759,4.13,760,4.13]],["title/controllers/UserController.html",[79,1.754,761,2.406]],["body/controllers/UserController.html",[0,0.111,3,0.248,4,0.219,5,0.219,7,0.476,9,1.294,13,0.023,15,2.019,17,0.762,26,0.51,35,0.248,44,0.012,45,0.016,46,0.012,51,1.759,54,1.29,57,1.372,63,0.968,64,0.717,65,0.913,68,1.217,70,0.512,74,2.36,78,1.087,81,1.759,88,3.264,96,2.857,97,1.881,102,3.227,161,2.857,195,2.638,231,1.649,232,2.176,284,2.692,291,3.441,313,2.902,319,2.857,323,3.227,326,2.36,555,2.581,761,3.871,762,3.227,763,3.789,764,5.052,765,3.789,766,3.789,767,3.789,768,3.789,769,3.789,770,3.227,771,3.789,772,3.789,773,3.789,774,3.789,775,3.789,776,3.789,777,3.789,778,3.789,779,3.789,780,3.789]],["title/interfaces/UserInterface.html",[363,1.64,781,2.664]],["body/interfaces/UserInterface.html",[3,0.318,4,0.281,5,0.281,7,0.608,8,1.904,11,2.89,12,0.754,13,0.022,14,1.829,26,0.435,35,0.318,44,0.015,45,0.018,46,0.015,49,3.681,363,2.249,364,4.344,365,3.018,781,4.457,782,4.126,783,4.845]],["title/classes/Users.html",[0,0.103,784,2.201]],["body/classes/Users.html",[0,0.072,2,1.218,3,0.161,4,0.142,5,0.142,7,0.308,8,1.193,11,1.944,12,1.062,13,0.023,14,1.922,15,3.571,17,1.349,26,0.22,35,0.161,38,2.38,43,2.308,44,0.008,45,0.012,46,0.008,74,1.528,171,1.84,183,0.943,368,3.804,370,3.742,389,1.671,438,4.189,593,1.849,784,2.308,785,2.089,786,4.467,787,4.467,788,3.706,789,4.467,790,4.467,791,4.467,792,3.706,793,3.706,794,3.706,795,4.467,796,3.706,797,4.978,798,4.467,799,3.804,800,2.453,801,2.453,802,4.467,803,2.453,804,6.15,805,2.453,806,5.118,807,2.453,808,2.453,809,2.453,810,2.453,811,2.453,812,2.453,813,4.467,814,2.453,815,2.089,816,2.453,817,2.453,818,2.453,819,4.467,820,2.453,821,2.453,822,3.706,823,4.978,824,3.706,825,2.453,826,2.453,827,4.467,828,2.453,829,2.453,830,3.706,831,2.453,832,4.467,833,2.453,834,2.453,835,2.453,836,2.453,837,2.453]],["title/modules/UsersModule.html",[111,0.802,257,2.029]],["body/modules/UsersModule.html",[0,0.092,3,0.206,4,0.182,5,0.182,13,0.023,26,0.588,35,0.206,44,0.01,45,0.014,46,0.01,64,0.595,70,0.425,81,2.063,97,1.561,111,1.171,113,1.139,114,1.209,115,1.368,116,1.368,117,1.209,118,2.107,119,2.107,123,3.27,128,1.934,129,1.368,130,1.368,132,2.207,144,2.372,170,1.806,171,1.561,172,2.553,173,2.368,174,2.142,175,2.142,176,1.806,177,2.142,179,2.553,180,2.142,181,1.959,182,1.806,183,1.209,184,1.806,185,1.806,186,1.676,257,3.763,266,3.786,267,2.679,268,2.142,269,1.959,272,2.679,273,2.769,274,2.372,275,2.679,276,2.679,284,3.613,388,1.959,504,2.679,761,3.512,770,2.679,784,1.959,838,2.679,839,3.145,840,2.679,841,2.679,842,3.145,843,3.145,844,3.145,845,3.145,846,2.679,847,3.145,848,3.145,849,3.145,850,3.145]],["title/injectables/UsersService.html",[154,0.627,284,1.882]],["body/injectables/UsersService.html",[0,0.09,3,0.202,4,0.178,5,0.178,7,0.386,8,1.41,9,1.051,12,0.479,13,0.023,17,1.261,26,0.526,35,0.202,44,0.01,45,0.014,46,0.01,49,2.726,51,1.429,54,1.118,57,1.585,63,1.497,64,1.109,65,1.412,68,1.412,70,0.416,78,0.883,95,2.981,154,0.777,155,1.115,183,1.683,195,2.974,284,2.332,291,3.47,300,3.78,331,1.528,371,4.364,373,5.19,374,3.728,375,4.339,376,3.728,377,3.728,379,2.621,382,2.621,384,2.621,387,2.621,388,1.917,389,2.096,608,2.321,784,2.726,846,2.621,851,2.621,852,4.378,853,3.078,854,3.078,855,4.378,856,4.378,857,3.078,858,5.863,859,3.078,860,3.078,861,3.078,862,3.078,863,3.078,864,3.078,865,3.078,866,3.078,867,3.078,868,3.078]],["title/coverage.html",[869,3.634]],["body/coverage.html",[0,0.175,1,1.406,5,0.153,6,3.178,12,0.411,13,0.022,30,1.516,33,1.644,36,1.406,39,1.406,44,0.008,45,0.012,46,0.008,47,1.644,48,2.248,79,2.563,80,1.797,82,2.248,98,0.956,117,1.015,126,1.644,127,1.644,154,1.164,156,2.248,159,1.797,160,2.248,168,1.644,191,2.248,192,1.797,193,2.248,223,1.406,258,1.644,259,1.644,269,1.644,273,1.644,280,2.248,284,1.406,287,1.516,306,1.99,307,1.99,308,1.99,331,1.31,363,2.396,364,1.797,366,2.248,371,1.797,372,2.248,407,1.406,414,1.99,544,1.99,545,2.248,546,2.248,579,1.644,580,2.952,585,1.644,596,2.248,616,2.248,624,2.248,657,2.248,662,3.893,670,2.248,673,1.644,709,2.952,718,1.797,755,1.99,756,2.248,761,1.797,762,2.248,781,1.99,782,2.248,784,1.644,785,2.248,799,6.063,806,2.248,815,3.334,851,2.248,869,1.99,870,2.639,871,2.639,872,2.639,873,5.979,874,4.667,875,3.915,876,2.639,877,2.639,878,5.514,879,3.893,880,6.383,881,5.776,882,2.248,883,3.915,884,2.248,885,2.639,886,2.639,887,2.952,888,2.639,889,2.639,890,2.639,891,2.639,892,2.248,893,2.639,894,2.639,895,2.639,896,2.639,897,2.639,898,2.248,899,2.639,900,2.639]],["title/dependencies.html",[114,1.634,901,2.952]],["body/dependencies.html",[0,0.145,13,0.023,30,2.127,32,2.522,44,0.011,45,0.015,46,0.011,70,0.501,97,1.839,114,1.424,227,3.099,268,2.522,286,2.522,388,2.307,389,2.522,442,3.154,443,3.154,444,3.154,508,3.154,604,4.53,605,2.793,621,4.238,631,3.154,718,2.522,902,3.704,903,5.619,904,3.704,905,3.704,906,3.704,907,3.704,908,3.704,909,3.704,910,3.704,911,3.704,912,3.704,913,3.704,914,3.704,915,3.704,916,3.704,917,3.704,918,3.704,919,3.704,920,3.704,921,3.704,922,3.704,923,3.704,924,3.704,925,3.704,926,3.704,927,3.704,928,3.704,929,3.704,930,3.704,931,3.704,932,3.704,933,3.704,934,3.704,935,3.704,936,3.704,937,3.704,938,3.704,939,3.704,940,3.704,941,3.704,942,3.704,943,3.704,944,3.704,945,3.704,946,3.704,947,3.704,948,3.704,949,3.704]],["title/miscellaneous/enumerations.html",[950,1.465,951,3.619]],["body/miscellaneous/enumerations.html",[7,0.603,13,0.022,44,0.015,45,0.018,46,0.015,59,4.434,72,3.377,74,2.992,348,4.092,478,5.213,950,2.385,951,4.092,952,4.804,953,5.881,954,4.804,955,4.804,956,4.804,957,4.804,958,4.804,959,4.804,960,4.804,961,4.804,962,4.804,963,4.804,964,4.804,965,4.804]],["title/miscellaneous/functions.html",[950,1.465,966,3.619]],["body/miscellaneous/functions.html",[4,0.265,7,0.574,10,2.627,13,0.022,14,1.312,33,3.553,44,0.014,45,0.018,46,0.014,63,1.588,64,1.176,65,1.498,68,1.374,117,2.391,307,4.302,308,4.302,484,3.116,879,3.449,887,3.449,898,3.896,950,2.271,966,3.896,967,4.575,968,4.859,969,3.896,970,4.575,971,5.705,972,4.575,973,4.575,974,5.705,975,4.575,976,4.575]],["title/index.html",[7,0.371,977,2.952,978,2.952]],["body/index.html",[13,0.023,44,0.013,45,0.017,46,0.013,200,4.137,413,3.663,459,3.663,869,3.243,979,4.3,980,6.834,981,4.3,982,4.3,983,6.724,984,4.3,985,4.3,986,5.487,987,4.3,988,4.3,989,4.3,990,5.487,991,4.3,992,4.3,993,4.3,994,4.3,995,4.3,996,4.3,997,4.3,998,4.3]],["title/modules.html",[113,1.745]],["body/modules.html",[13,0.018,44,0.014,45,0.018,46,0.014,112,3.091,113,1.644,123,2.418,124,2.606,125,2.827,164,2.827,252,2.827,257,2.606,400,2.827,404,2.827,497,2.827,999,7.053,1000,7.053,1001,7.053,1002,7.103,1003,4.538,1004,4.538]],["title/overview.html",[1005,4.105]],["body/overview.html",[2,1.264,13,0.022,44,0.008,45,0.012,46,0.008,81,1.181,98,1.967,111,0.578,112,4.523,113,0.922,114,0.979,115,1.107,116,1.107,117,0.979,118,1.04,119,1.04,120,2.168,121,2.168,122,2.168,123,3.371,124,3.634,125,4.052,126,2.845,127,2.845,128,1.658,129,1.107,130,1.107,155,0.922,164,3.941,165,2.168,166,2.168,167,2.168,168,3.68,173,1.356,223,3.148,252,4.295,253,2.168,254,2.168,255,2.168,256,2.168,257,3.778,258,2.845,259,2.845,284,3.148,287,3.394,365,1.585,396,2.168,397,2.168,398,2.168,400,4.052,404,3.784,405,2.168,406,2.168,407,2.702,494,2.168,495,2.168,496,2.168,497,3.68,538,2.168,540,2.168,745,2.168,747,2.168,748,2.168,838,2.168,840,2.168,841,2.168,1005,2.168,1006,2.545,1007,3.811,1008,2.545]],["title/miscellaneous/typealiases.html",[950,1.465,1009,4.249]],["body/miscellaneous/typealiases.html",[7,0.68,12,0.843,13,0.02,44,0.017,45,0.02,46,0.017,414,4.084,415,5.381,446,4.613,950,2.689,1010,5.417,1011,5.417]],["title/miscellaneous/variables.html",[432,3.204,950,1.465]],["body/miscellaneous/variables.html",[7,0.518,12,0.832,13,0.022,14,1.798,30,3.405,44,0.013,45,0.017,46,0.013,78,1.185,231,1.797,269,3.33,273,3.692,306,4.727,331,2.05,370,2.572,432,3.114,435,3.518,438,4.531,478,5.016,605,3.114,709,3.114,718,3.641,719,3.518,879,3.114,882,4.554,884,3.518,887,3.114,892,3.518,950,2.05,968,4.554,969,3.518,1012,4.13,1013,4.13,1014,4.13,1015,4.13,1016,4.13,1017,4.13,1018,4.13,1019,4.13]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseInterface.html":{},"injectables/BaseService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/ResgisterDto.html":{},"modules/ServicesModule.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":799,"title":{},"body":{"classes/Users.html":{},"coverage.html":{}}}],["0.1.1",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["0.2.20",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":174,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{}}}],["1",{"_index":529,"title":{},"body":{"modules/CoreModule.html":{}}}],["1.0.0",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["1.0.33",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["1.16.3",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["1.17.0",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["1.4.4",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1006,"title":{},"body":{"overview.html":{}}}],["100",{"_index":815,"title":{},"body":{"classes/Users.html":{},"coverage.html":{}}}],["100,default",{"_index":825,"title":{},"body":{"classes/Users.html":{}}}],["10001",{"_index":957,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["10002",{"_index":959,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["10003",{"_index":961,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["10004",{"_index":963,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["10005",{"_index":965,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["11:21:17",{"_index":500,"title":{},"body":{"modules/CoreModule.html":{}}}],["12",{"_index":173,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["14.3.1",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["15:03:49",{"_index":175,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{}}}],["16.1.8",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["17:06:38",{"_index":178,"title":{},"body":{"modules/ArticleModule.html":{}}}],["17:16:01",{"_index":700,"title":{},"body":{"modules/MailerModule.html":{}}}],["17:32:32",{"_index":750,"title":{},"body":{"modules/ServicesModule.html":{}}}],["17:36:30",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{}}}],["17:38:11",{"_index":751,"title":{},"body":{"modules/ServicesModule.html":{}}}],["17:38:49",{"_index":843,"title":{},"body":{"modules/UsersModule.html":{}}}],["18",{"_index":699,"title":{},"body":{"modules/MailerModule.html":{}}}],["19:17:16",{"_index":701,"title":{},"body":{"modules/MailerModule.html":{}}}],["1agy4bcu4eqstmnyab8npchq",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1agy4bcuoecdz4yi6h8dxhdwgj84eqstmnyab8npchq",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1h",{"_index":277,"title":{},"body":{"modules/AuthModule.html":{}}}],["2.17.1",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":74,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"controllers/UserController.html":{},"classes/Users.html":{},"miscellaneous/enumerations.html":{}}}],["2019",{"_index":172,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{}}}],["23",{"_index":177,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{}}}],["24",{"_index":499,"title":{},"body":{"modules/CoreModule.html":{}}}],["25",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["3.0.0",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["3/7",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":849,"title":{},"body":{"modules/UsersModule.html":{}}}],["37",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1007,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["4.0.3",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["4.0.6",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["4/7",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":565,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["42",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["465",{"_index":582,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["50",{"_index":806,"title":{},"body":{"classes/Users.html":{},"coverage.html":{}}}],["57",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["6.1.0",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["6.4.2",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["6.7.2",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1008,"title":{},"body":{"overview.html":{}}}],["8.2.0",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":22,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["_]{5,20}$/i",{"_index":23,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["abstract",{"_index":390,"title":{},"body":{"injectables/BaseService.html":{}}}],["accessors",{"_index":419,"title":{},"body":{"classes/ConfigService.html":{}}}],["active",{"_index":786,"title":{},"body":{"classes/Users.html":{}}}],["activeregister",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["activeregister(@body",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["activeregister(body",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["activeregister(data",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["activeregister(data:activeregisterdto",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["activeregisterdto",{"_index":1,"title":{"classes/ActiveRegisterDto.html":{}},"body":{"classes/ActiveRegisterDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{},"coverage.html":{}}}],["address",{"_index":587,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["aliases",{"_index":1010,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alwaysincludepattern",{"_index":643,"title":{},"body":{"injectables/LogServive.html":{}}}],["api",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["api.exception",{"_index":556,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["api/auth",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["api/user",{"_index":763,"title":{},"body":{"controllers/UserController.html":{}}}],["api_auth_enabled",{"_index":464,"title":{},"body":{"classes/ConfigService.html":{}}}],["apierrorcode",{"_index":59,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["apiexception",{"_index":47,"title":{"classes/ApiException.html":{}},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["apiexception('信息有误，帐号无法被激活。',apierrorcode.toekn_invalid",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiexception('用户不存在',apierrorcode.user_no_exit",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiexception('用户名已存在',apierrorcode.username_invalid",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiexception('邮件发送失败',apierrorcode.timeout",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiexception('邮箱已存在',apierrorcode.email_invalid",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiexception(e,apierrorcode.timeout",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["app",{"_index":982,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":80,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appenders",{"_index":634,"title":{},"body":{"injectables/LogServive.html":{}}}],["applied",{"_index":437,"title":{},"body":{"classes/ConfigService.html":{}}}],["apply(loggermiddleware",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":112,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":126,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["appservice,logservive,loggermiddleware",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["argumentshost",{"_index":550,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["argumentshost,badrequestexception",{"_index":553,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["article",{"_index":162,"title":{},"body":{"controllers/ArticleController.html":{}}}],["article.controller",{"_index":188,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article.service",{"_index":189,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article/article.module",{"_index":542,"title":{},"body":{"modules/FeatureModule.html":{}}}],["articlecontroller",{"_index":159,"title":{"controllers/ArticleController.html":{}},"body":{"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"coverage.html":{}}}],["articlemodule",{"_index":164,"title":{"modules/ArticleModule.html":{}},"body":{"modules/ArticleModule.html":{},"modules/FeatureModule.html":{},"modules.html":{},"overview.html":{}}}],["articleservice",{"_index":168,"title":{"injectables/ArticleService.html":{}},"body":{"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":532,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["auth.controller",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":543,"title":{},"body":{"modules/FeatureModule.html":{}}}],["auth/constants",{"_index":847,"title":{},"body":{"modules/UsersModule.html":{}}}],["authcontroller",{"_index":192,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":96,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":252,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/FeatureModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":170,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{}}}],["authservice",{"_index":223,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1004,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":787,"title":{},"body":{"classes/Users.html":{}}}],["avatar:'https://huyaimg.msstatic.com/avatar/1076/7e/e1d48955f39a25fb944f4dedb3ed16_180_135.jpg",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["await",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"controllers/UserController.html":{}}}],["badrequestexception",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["baseinterface",{"_index":364,"title":{"interfaces/BaseInterface.html":{}},"body":{"interfaces/BaseInterface.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["baseservice",{"_index":371,"title":{"injectables/BaseService.html":{}},"body":{"injectables/BaseService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["baseservice:15",{"_index":860,"title":{},"body":{"injectables/UsersService.html":{}}}],["baseservice:25",{"_index":861,"title":{},"body":{"injectables/UsersService.html":{}}}],["baseservice:35",{"_index":859,"title":{},"body":{"injectables/UsersService.html":{}}}],["baseservice:39",{"_index":862,"title":{},"body":{"injectables/UsersService.html":{}}}],["baseservice:8",{"_index":863,"title":{},"body":{"injectables/UsersService.html":{}}}],["bearer",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["body",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["body,@next",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["body:activeregisterdto",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["body:resgisterdto",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["boolean",{"_index":484,"title":{},"body":{"classes/ConfigService.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"miscellaneous/functions.html":{}}}],["boolean(this.envconfig.api_auth_enabled",{"_index":485,"title":{},"body":{"classes/ConfigService.html":{}}}],["bootstrap",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1002,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":999,"title":{},"body":{"modules.html":{}}}],["catch",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MailService.html":{}}}],["catch(exception",{"_index":549,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":557,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["categories",{"_index":649,"title":{},"body":{"injectables/LogServive.html":{}}}],["class",{"_index":0,"title":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{},"classes/Users.html":{}},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/ResgisterDto.html":{},"modules/ServicesModule.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{},"classes/Users.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_articlemodule",{"_index":165,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_exports",{"_index":166,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_providers",{"_index":167,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_commonmodule",{"_index":396,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_exports",{"_index":398,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_imports",{"_index":397,"title":{},"body":{"modules/CommonModule.html":{},"overview.html":{}}}],["cluster_commonmodule_providers",{"_index":399,"title":{},"body":{"modules/CommonModule.html":{}}}],["cluster_configmodule",{"_index":405,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_configmodule_exports",{"_index":406,"title":{},"body":{"modules/ConfigModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":494,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":496,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":495,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_featuremodule",{"_index":538,"title":{},"body":{"modules/FeatureModule.html":{},"overview.html":{}}}],["cluster_featuremodule_exports",{"_index":540,"title":{},"body":{"modules/FeatureModule.html":{},"overview.html":{}}}],["cluster_featuremodule_imports",{"_index":539,"title":{},"body":{"modules/FeatureModule.html":{}}}],["cluster_servicesmodule",{"_index":745,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesmodule_exports",{"_index":747,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesmodule_imports",{"_index":746,"title":{},"body":{"modules/ServicesModule.html":{}}}],["cluster_servicesmodule_providers",{"_index":748,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":838,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":840,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":839,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":841,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/UserController.html":{}}}],["code.enum",{"_index":73,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{}}}],["code.enum.ts",{"_index":953,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["column",{"_index":823,"title":{},"body":{"classes/Users.html":{}}}],["column({length",{"_index":804,"title":{},"body":{"classes/Users.html":{}}}],["column({length:200,default",{"_index":826,"title":{},"body":{"classes/Users.html":{}}}],["column({length:50",{"_index":830,"title":{},"body":{"classes/Users.html":{}}}],["column({length:50,default",{"_index":832,"title":{},"body":{"classes/Users.html":{}}}],["column({length:50,default:'user",{"_index":829,"title":{},"body":{"classes/Users.html":{}}}],["column({type",{"_index":797,"title":{},"body":{"classes/Users.html":{}}}],["column({type:'int',default:0",{"_index":827,"title":{},"body":{"classes/Users.html":{}}}],["common/common.module",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["common/interfaces/interface",{"_index":783,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["common/log/log.service",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/FeatureModule.html":{},"injectables/LoggerMiddleware.html":{}}}],["common/middleware/logger.middleware",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["common/mysql/base.service",{"_index":864,"title":{},"body":{"injectables/UsersService.html":{}}}],["common/services/mail.service",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["common/util",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["commonmodule",{"_index":123,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["config",{"_index":449,"title":{},"body":{"classes/ConfigService.html":{}}}],["config.service",{"_index":409,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config/${process.env.node_env",{"_index":447,"title":{},"body":{"classes/ConfigService.html":{}}}],["config/app",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["config/config.module",{"_index":502,"title":{},"body":{"modules/CoreModule.html":{}}}],["config/config.service",{"_index":505,"title":{},"body":{"modules/CoreModule.html":{}}}],["configmodule",{"_index":404,"title":{"modules/ConfigModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":407,"title":{"classes/ConfigService.html":{}},"body":{"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["configservice(`config/.env.${process.env.node_env",{"_index":412,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configservice.getkeys(['mail_host','mail_port','mail_user','mail_pass','mail_service",{"_index":523,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice.getstring('database_database",{"_index":515,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice.getstring('database_host",{"_index":510,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice.getstring('database_password",{"_index":513,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice.getstring('database_port",{"_index":511,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice.getstring('database_username",{"_index":512,"title":{},"body":{"modules/CoreModule.html":{}}}],["configure",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogServive.html":{}}}],["configure(consumer",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["connections",{"_index":740,"title":{},"body":{"injectables/MailerService.html":{}}}],["console.log('exception',exception.message",{"_index":564,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["console.log('getinfo',data",{"_index":780,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log('message",{"_index":731,"title":{},"body":{"injectables/MailerService.html":{}}}],["console.log('sendmail",{"_index":728,"title":{},"body":{"injectables/MailerService.html":{}}}],["console.log('test1",{"_index":759,"title":{},"body":{"injectables/TestMiddleware.html":{}}}],["console.log('text2",{"_index":760,"title":{},"body":{"injectables/TestMiddleware.html":{}}}],["console.log(query",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["console.log(req.user",{"_index":105,"title":{},"body":{"controllers/AppController.html":{}}}],["console.log(username",{"_index":622,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["const",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":57,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject('mail_option",{"_index":721,"title":{},"body":{"injectables/MailerService.html":{}}}],["constructor(authservice",{"_index":617,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(errormessage",{"_index":58,"title":{},"body":{"classes/ApiException.html":{}}}],["constructor(filepath",{"_index":421,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(logger",{"_index":659,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["constructor(mailer",{"_index":672,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(option",{"_index":712,"title":{},"body":{"injectables/MailerService.html":{}}}],["constructor(private",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["constructor(usersrepository",{"_index":853,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["consumer",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["controller",{"_index":79,"title":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/ArticleController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('api/auth",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('api/user",{"_index":771,"title":{},"body":{"controllers/UserController.html":{}}}],["controller('article",{"_index":163,"title":{},"body":{"controllers/ArticleController.html":{}}}],["controller,post,request",{"_index":768,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":81,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["controllers:[appcontroller",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers:[authcontroller",{"_index":278,"title":{},"body":{"modules/AuthModule.html":{}}}],["cookie",{"_index":918,"title":{},"body":{"dependencies.html":{}}}],["core/config/config.service",{"_index":680,"title":{},"body":{"injectables/MailService.html":{}}}],["core/core.module",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{}}}],["core/decorators/validator.decorators",{"_index":34,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["core/enums/api",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["core/exceptions/api.exception",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["core/mailer/mailer.service",{"_index":679,"title":{},"body":{"injectables/MailService.html":{}}}],["coremodule",{"_index":124,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["coverage",{"_index":869,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":852,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(data",{"_index":856,"title":{},"body":{"injectables/UsersService.html":{}}}],["create_at",{"_index":367,"title":{},"body":{"interfaces/BaseInterface.html":{}}}],["create_time",{"_index":788,"title":{},"body":{"classes/Users.html":{}}}],["create_time:date",{"_index":836,"title":{},"body":{"classes/Users.html":{}}}],["createdatecolumn",{"_index":802,"title":{},"body":{"classes/Users.html":{}}}],["crypto",{"_index":882,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["crypto.createhash('md5",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["csrf",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["csurf",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["ctx",{"_index":558,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":561,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":560,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["data",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BaseService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["data.password",{"_index":779,"title":{},"body":{"controllers/UserController.html":{}}}],["database",{"_index":514,"title":{},"body":{"modules/CoreModule.html":{}}}],["database_database",{"_index":472,"title":{},"body":{"classes/ConfigService.html":{}}}],["database_host",{"_index":468,"title":{},"body":{"classes/ConfigService.html":{}}}],["database_password",{"_index":471,"title":{},"body":{"classes/ConfigService.html":{}}}],["database_port",{"_index":469,"title":{},"body":{"classes/ConfigService.html":{}}}],["database_type",{"_index":466,"title":{},"body":{"classes/ConfigService.html":{}}}],["database_username",{"_index":470,"title":{},"body":{"classes/ConfigService.html":{}}}],["date",{"_index":171,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"interfaces/BaseInterface.html":{},"modules/CoreModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"classes/Users.html":{},"modules/UsersModule.html":{}}}],["datefile",{"_index":636,"title":{},"body":{"injectables/LogServive.html":{}}}],["dd.log",{"_index":642,"title":{},"body":{"injectables/LogServive.html":{}}}],["debug",{"_index":651,"title":{},"body":{"injectables/LogServive.html":{}}}],["declarations",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{},"controllers/UserController.html":{},"classes/Users.html":{}}}],["decs",{"_index":789,"title":{},"body":{"classes/Users.html":{}}}],["default",{"_index":438,"title":{},"body":{"classes/ConfigService.html":{},"injectables/LogServive.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["default('development",{"_index":461,"title":{},"body":{"classes/ConfigService.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/ResgisterDto.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"classes/Users.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{}}}],["dependencies",{"_index":114,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":182,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{}}}],["development",{"_index":413,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{}}}],["development'}.env",{"_index":448,"title":{},"body":{"classes/ConfigService.html":{}}}],["diffencryptmd5",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["diffencryptmd5(source",{"_index":970,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dist/**/*.entity{.ts,.js",{"_index":517,"title":{},"body":{"modules/CoreModule.html":{}}}],["documentation",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":442,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["dotenv.parse(fs.readfilesync(filepath",{"_index":450,"title":{},"body":{"classes/ConfigService.html":{}}}],["dto/auth.dto",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dynamicmodule",{"_index":695,"title":{},"body":{"modules/MailerModule.html":{}}}],["e",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["e2e",{"_index":991,"title":{},"body":{"index.html":{}}}],["edit",{"_index":185,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{}}}],["email",{"_index":43,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{},"classes/Users.html":{}}}],["email:string",{"_index":831,"title":{},"body":{"classes/Users.html":{}}}],["email_invalid",{"_index":960,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["encryptmd5",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["encryptmd5(key",{"_index":972,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encryptmd5(user.email",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["ensures",{"_index":430,"title":{},"body":{"classes/ConfigService.html":{}}}],["entities",{"_index":516,"title":{},"body":{"modules/CoreModule.html":{}}}],["entity",{"_index":822,"title":{},"body":{"classes/Users.html":{}}}],["enumerations",{"_index":951,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/api",{"_index":71,"title":{},"body":{"classes/ApiException.html":{}}}],["envconfig",{"_index":415,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/typealiases.html":{}}}],["envvarsschema",{"_index":453,"title":{},"body":{"classes/ConfigService.html":{}}}],["envvarsschema.validate",{"_index":480,"title":{},"body":{"classes/ConfigService.html":{}}}],["err",{"_index":644,"title":{},"body":{"injectables/LogServive.html":{}}}],["err(msg",{"_index":655,"title":{},"body":{"injectables/LogServive.html":{}}}],["error",{"_index":72,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/LogServive.html":{},"injectables/MailerService.html":{},"miscellaneous/enumerations.html":{}}}],["error',error",{"_index":729,"title":{},"body":{"injectables/MailerService.html":{}}}],["error(`config",{"_index":481,"title":{},"body":{"classes/ConfigService.html":{}}}],["error.message",{"_index":483,"title":{},"body":{"classes/ConfigService.html":{}}}],["errorcode",{"_index":52,"title":{},"body":{"classes/ApiException.html":{}}}],["errormessage",{"_index":53,"title":{},"body":{"classes/ApiException.html":{}}}],["exception",{"_index":552,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter.ts",{"_index":546,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:7",{"_index":551,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.geterrorcode",{"_index":577,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.geterrormessage",{"_index":578,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":563,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.message.error",{"_index":567,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.message.message",{"_index":568,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":548,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exitemail",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["exitusername",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["export",{"_index":35,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseInterface.html":{},"injectables/BaseService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/ResgisterDto.html":{},"modules/ServicesModule.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["exports:[articleservice",{"_index":190,"title":{},"body":{"modules/ArticleModule.html":{}}}],["exports:[configmodule,mailermodule",{"_index":537,"title":{},"body":{"modules/CoreModule.html":{}}}],["express",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TestMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":49,"title":{},"body":{"classes/ApiException.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/UserInterface.html":{},"injectables/UsersService.html":{}}}],["extractjwt",{"_index":602,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":610,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":520,"title":{},"body":{"modules/CoreModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/JwtStrategy.html":{}}}],["fans_num",{"_index":790,"title":{},"body":{"classes/Users.html":{}}}],["feature/feature.module",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["featuremodule",{"_index":125,"title":{"modules/FeatureModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FeatureModule.html":{},"modules.html":{},"overview.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseInterface.html":{},"injectables/BaseService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/ResgisterDto.html":{},"modules/ServicesModule.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["filename",{"_index":637,"title":{},"body":{"injectables/LogServive.html":{}}}],["filepath",{"_index":186,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{}}}],["find",{"_index":374,"title":{},"body":{"injectables/BaseService.html":{},"injectables/UsersService.html":{}}}],["find(query",{"_index":379,"title":{},"body":{"injectables/BaseService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":375,"title":{},"body":{"injectables/BaseService.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":376,"title":{},"body":{"injectables/BaseService.html":{},"injectables/UsersService.html":{}}}],["findone(query",{"_index":382,"title":{},"body":{"injectables/BaseService.html":{},"injectables/UsersService.html":{}}}],["focus_num",{"_index":791,"title":{},"body":{"classes/Users.html":{}}}],["forroot",{"_index":690,"title":{},"body":{"modules/MailerModule.html":{}}}],["forroot(options",{"_index":691,"title":{},"body":{"modules/MailerModule.html":{}}}],["forrootasync",{"_index":696,"title":{},"body":{"modules/MailerModule.html":{}}}],["forrootasync(options",{"_index":697,"title":{},"body":{"modules/MailerModule.html":{}}}],["forroutes",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["fs",{"_index":445,"title":{},"body":{"classes/ConfigService.html":{}}}],["function",{"_index":662,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/TestMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":966,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/')@render('index",{"_index":89,"title":{},"body":{"controllers/AppController.html":{}}}],["get('info",{"_index":773,"title":{},"body":{"controllers/UserController.html":{}}}],["get('profile",{"_index":103,"title":{},"body":{"controllers/AppController.html":{}}}],["get('register",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('register')@render('register",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('test",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["get,render",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["geterrorcode",{"_index":55,"title":{},"body":{"classes/ApiException.html":{}}}],["geterrormessage",{"_index":56,"title":{},"body":{"classes/ApiException.html":{}}}],["gethello",{"_index":157,"title":{},"body":{"injectables/AppService.html":{}}}],["getinfo",{"_index":764,"title":{},"body":{"controllers/UserController.html":{}}}],["getinfo(@request",{"_index":774,"title":{},"body":{"controllers/UserController.html":{}}}],["getinfo(req",{"_index":765,"title":{},"body":{"controllers/UserController.html":{}}}],["getisapiauthenabled",{"_index":440,"title":{},"body":{"classes/ConfigService.html":{}}}],["getkeys",{"_index":416,"title":{},"body":{"classes/ConfigService.html":{}}}],["getkeys(keys",{"_index":423,"title":{},"body":{"classes/ConfigService.html":{}}}],["getkeys(keys:[string",{"_index":488,"title":{},"body":{"classes/ConfigService.html":{}}}],["getlogger('default",{"_index":653,"title":{},"body":{"injectables/LogServive.html":{}}}],["getlogger,connectlogger",{"_index":630,"title":{},"body":{"injectables/LogServive.html":{}}}],["getprofile",{"_index":83,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":104,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["getstring",{"_index":417,"title":{},"body":{"classes/ConfigService.html":{}}}],["getstring(key",{"_index":426,"title":{},"body":{"classes/ConfigService.html":{}}}],["getstring(key:string):string",{"_index":486,"title":{},"body":{"classes/ConfigService.html":{}}}],["getting",{"_index":977,"title":{"index.html":{}},"body":{}}],["github_accesstoken",{"_index":792,"title":{},"body":{"classes/Users.html":{}}}],["github_accesstoken:string",{"_index":835,"title":{},"body":{"classes/Users.html":{}}}],["github_id",{"_index":793,"title":{},"body":{"classes/Users.html":{}}}],["github_id:string",{"_index":833,"title":{},"body":{"classes/Users.html":{}}}],["github_username",{"_index":794,"title":{},"body":{"classes/Users.html":{}}}],["github_username:string",{"_index":834,"title":{},"body":{"classes/Users.html":{}}}],["global",{"_index":633,"title":{},"body":{"injectables/LogServive.html":{},"modules/MailerModule.html":{}}}],["graph",{"_index":1003,"title":{},"body":{"modules.html":{}}}],["hapi/joi",{"_index":444,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["hbs",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["hello",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["host",{"_index":509,"title":{},"body":{"modules/CoreModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/MailService.html":{}}}],["host.switchtohttp",{"_index":559,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":595,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/MailService.html":{}}}],["http",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["httpexception",{"_index":50,"title":{},"body":{"classes/ApiException.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["httpexception,httpstatus",{"_index":554,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexceptionfilter",{"_index":544,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httpstatus",{"_index":61,"title":{},"body":{"classes/ApiException.html":{}}}],["httpstatus,response",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.bad_request",{"_index":566,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["id",{"_index":368,"title":{},"body":{"interfaces/BaseInterface.html":{},"classes/Users.html":{}}}],["identifier",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["if(!diffencryptmd5(keycode",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(!user",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(!username",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(array.isarray(message",{"_index":570,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["if(exitemail",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(exitusername",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(md5(password",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(message",{"_index":569,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["if(req.user",{"_index":775,"title":{},"body":{"controllers/UserController.html":{}}}],["if(res",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(sendstate",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.envconfig[item",{"_index":491,"title":{},"body":{"classes/ConfigService.html":{}}}],["if(val['constraints']['matches",{"_index":572,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ignoreexpiration",{"_index":611,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoretls",{"_index":536,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["implements",{"_index":547,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TestMiddleware.html":{}}}],["import",{"_index":26,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/ResgisterDto.html":{},"modules/ServicesModule.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{}}}],["imports:[coremodule",{"_index":754,"title":{},"body":{"modules/ServicesModule.html":{}}}],["including",{"_index":436,"title":{},"body":{"classes/ConfigService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/BaseInterface.html":{},"injectables/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"classes/ResgisterDto.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/Users.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseInterface.html":{},"injectables/BaseService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/ResgisterDto.html":{},"modules/ServicesModule.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["info.messageid",{"_index":734,"title":{},"body":{"injectables/MailerService.html":{}}}],["info.response",{"_index":735,"title":{},"body":{"injectables/MailerService.html":{}}}],["inherited",{"_index":858,"title":{},"body":{"injectables/UsersService.html":{}}}],["inject",{"_index":521,"title":{},"body":{"modules/CoreModule.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["injectable",{"_index":154,"title":{"injectables/AppService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/TestMiddleware.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/TestMiddleware.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":155,"title":{},"body":{"injectables/AppService.html":{},"injectables/ArticleService.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"injectables/TestMiddleware.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":387,"title":{},"body":{"injectables/BaseService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(users",{"_index":865,"title":{},"body":{"injectables/UsersService.html":{}}}],["installation",{"_index":979,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":981,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":576,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["int",{"_index":798,"title":{},"body":{"classes/Users.html":{}}}],["interface",{"_index":363,"title":{"interfaces/BaseInterface.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"interfaces/UserInterface.html":{}},"body":{"interfaces/BaseInterface.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":365,"title":{},"body":{"interfaces/BaseInterface.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"interfaces/UserInterface.html":{},"overview.html":{}}}],["ioption",{"_index":579,"title":{"interfaces/IOption.html":{}},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/MailerService.html":{},"coverage.html":{}}}],["isapiauthenabled",{"_index":420,"title":{},"body":{"classes/ConfigService.html":{}}}],["isemail",{"_index":42,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["isemail,isnotempty,notequals",{"_index":29,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["isendmail",{"_index":585,"title":{"interfaces/ISendMail.html":{}},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/MailerService.html":{},"coverage.html":{}}}],["isequalsthan",{"_index":33,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isequalsthan('password",{"_index":40,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["isequalsthan(property",{"_index":973,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isint,matches",{"_index":28,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["isnotempty",{"_index":37,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["isnotempty({message",{"_index":16,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["isstring",{"_index":27,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["javascript",{"_index":434,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi",{"_index":443,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["joi.boolean().required",{"_index":465,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.number().default(3000",{"_index":463,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.object",{"_index":455,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.objectschema",{"_index":454,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.string",{"_index":457,"title":{},"body":{"classes/ConfigService.html":{}}}],["joi.string().required",{"_index":467,"title":{},"body":{"classes/ConfigService.html":{}}}],["join",{"_index":632,"title":{},"body":{"injectables/LogServive.html":{}}}],["json",{"_index":575,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["json.stringify(req.body",{"_index":667,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["jwt",{"_index":605,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt.strategy",{"_index":264,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconstants",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":274,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{}}}],["jwtfromrequest",{"_index":609,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["jwtmodule.register",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["jwtservice",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":258,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtstrategy,logservive",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{}}}],["key",{"_index":10,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{},"miscellaneous/functions.html":{}}}],["keycode",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["keys",{"_index":425,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys.foreach((item",{"_index":490,"title":{},"body":{"classes/ConfigService.html":{}}}],["lasteditors",{"_index":179,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{}}}],["lastedittime",{"_index":176,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{}}}],["legend",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":824,"title":{},"body":{"classes/Users.html":{}}}],["level",{"_index":650,"title":{},"body":{"injectables/LogServive.html":{}}}],["license",{"_index":995,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":998,"title":{},"body":{"index.html":{}}}],["line",{"_index":592,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["list",{"_index":588,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["literal",{"_index":581,"title":{},"body":{"interfaces/IOption.html":{}}}],["local",{"_index":621,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{}}}],["localstrategy",{"_index":259,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":626,"title":{},"body":{"injectables/LogServive.html":{}}}],["log(msg",{"_index":628,"title":{},"body":{"injectables/LogServive.html":{}}}],["log/log.service",{"_index":403,"title":{},"body":{"modules/CommonModule.html":{},"injectables/TestMiddleware.html":{}}}],["log4js",{"_index":631,"title":{},"body":{"injectables/LogServive.html":{},"dependencies.html":{}}}],["logger",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{}}}],["logger:logservive",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["loggermiddleware",{"_index":127,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{},"overview.html":{}}}],["logging",{"_index":519,"title":{},"body":{"modules/CoreModule.html":{}}}],["login",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(body",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindto",{"_index":36,"title":{"classes/LoginDto.html":{}},"body":{"classes/ActiveRegisterDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{},"coverage.html":{}}}],["logs/errlog",{"_index":645,"title":{},"body":{"injectables/LogServive.html":{}}}],["logs/othlog",{"_index":647,"title":{},"body":{"injectables/LogServive.html":{}}}],["logs/reqlog",{"_index":638,"title":{},"body":{"injectables/LogServive.html":{}}}],["logservive",{"_index":98,"title":{"injectables/LogServive.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"modules/FeatureModule.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TestMiddleware.html":{},"coverage.html":{},"overview.html":{}}}],["mail.service",{"_index":753,"title":{},"body":{"modules/ServicesModule.html":{}}}],["mail_host",{"_index":473,"title":{},"body":{"classes/ConfigService.html":{}}}],["mail_option",{"_index":706,"title":{},"body":{"modules/MailerModule.html":{}}}],["mail_pass",{"_index":476,"title":{},"body":{"classes/ConfigService.html":{}}}],["mail_port",{"_index":474,"title":{},"body":{"classes/ConfigService.html":{}}}],["mail_service",{"_index":477,"title":{},"body":{"classes/ConfigService.html":{}}}],["mail_user",{"_index":475,"title":{},"body":{"classes/ConfigService.html":{}}}],["mailer",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["mailer.interface",{"_index":720,"title":{},"body":{"injectables/MailerService.html":{}}}],["mailer.mail_host",{"_index":526,"title":{},"body":{"modules/CoreModule.html":{}}}],["mailer.mail_pass",{"_index":535,"title":{},"body":{"modules/CoreModule.html":{}}}],["mailer.mail_port",{"_index":528,"title":{},"body":{"modules/CoreModule.html":{}}}],["mailer.mail_service",{"_index":525,"title":{},"body":{"modules/CoreModule.html":{}}}],["mailer.mail_user",{"_index":533,"title":{},"body":{"modules/CoreModule.html":{}}}],["mailer.service",{"_index":704,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailer/mailer.module",{"_index":503,"title":{},"body":{"modules/CoreModule.html":{}}}],["mailer:mailservice",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["mailermodule",{"_index":497,"title":{"modules/MailerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/MailerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailermodule.forrootasync",{"_index":522,"title":{},"body":{"modules/CoreModule.html":{}}}],["mailerservice",{"_index":673,"title":{"injectables/MailerService.html":{}},"body":{"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"coverage.html":{}}}],["mailservice",{"_index":287,"title":{"injectables/MailService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{},"modules/ServicesModule.html":{},"coverage.html":{},"overview.html":{}}}],["matches(/^[a",{"_index":19,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["matching",{"_index":45,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseInterface.html":{},"injectables/BaseService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/ResgisterDto.html":{},"modules/ServicesModule.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["md5",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["md5(data.password",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["md5.update(string).digest('hex",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memberof",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BaseService.html":{},"classes/ConfigService.html":{},"injectables/MailerService.html":{},"controllers/UserController.html":{}}}],["message",{"_index":24,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["message.foreach((val,key",{"_index":571,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["metadata",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":54,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["middlewareconsumer",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":950,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":997,"title":{},"body":{"index.html":{}}}],["mm",{"_index":641,"title":{},"body":{"injectables/LogServive.html":{}}}],["mode",{"_index":986,"title":{},"body":{"index.html":{}}}],["module",{"_index":111,"title":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":113,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["msg",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LogServive.html":{}}}],["mysql",{"_index":508,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["name",{"_index":64,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"modules/ServicesModule.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["needed",{"_index":431,"title":{},"body":{"classes/ConfigService.html":{},"injectables/MailerService.html":{}}}],["nest",{"_index":996,"title":{},"body":{"index.html":{}}}],["nestjs+mysql",{"_index":994,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":70,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"modules/ServicesModule.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":388,"title":{},"body":{"injectables/BaseService.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs\\src\\common\\services\\services.modules.ts",{"_index":752,"title":{},"body":{"modules/ServicesModule.html":{}}}],["nestjs\\src\\core\\core.module.ts",{"_index":501,"title":{},"body":{"modules/CoreModule.html":{}}}],["nestjs\\src\\core\\mailer\\mailer.module.ts",{"_index":702,"title":{},"body":{"modules/MailerModule.html":{}}}],["nestjs\\src\\feature\\article\\article.module.ts",{"_index":187,"title":{},"body":{"modules/ArticleModule.html":{}}}],["nestjs\\src\\feature\\auth\\auth.module.ts",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{}}}],["nestjs\\src\\feature\\users\\users.module.ts",{"_index":844,"title":{},"body":{"modules/UsersModule.html":{}}}],["nestmiddleware",{"_index":664,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/TestMiddleware.html":{}}}],["new",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"injectables/LocalStrategy.html":{},"injectables/MailerService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TestMiddleware.html":{}}}],["nick_name",{"_index":795,"title":{},"body":{"classes/Users.html":{}}}],["nick_name:data.username",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["node",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["node_env",{"_index":456,"title":{},"body":{"classes/ConfigService.html":{}}}],["nodemailer",{"_index":718,"title":{},"body":{"injectables/MailerService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["nodemailer.createtransport(option",{"_index":723,"title":{},"body":{"injectables/MailerService.html":{}}}],["npm",{"_index":980,"title":{},"body":{"index.html":{}}}],["null",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":370,"title":{},"body":{"interfaces/BaseInterface.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"classes/Users.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":489,"title":{},"body":{"classes/ConfigService.html":{}}}],["obj[item",{"_index":492,"title":{},"body":{"classes/ConfigService.html":{}}}],["object",{"_index":435,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["option",{"_index":714,"title":{},"body":{"injectables/MailerService.html":{}}}],["optional",{"_index":65,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/ISendMail.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":694,"title":{},"body":{"modules/MailerModule.html":{}}}],["options.imports",{"_index":705,"title":{},"body":{"modules/MailerModule.html":{}}}],["options.inject",{"_index":708,"title":{},"body":{"modules/MailerModule.html":{}}}],["options.usefactory",{"_index":707,"title":{},"body":{"modules/MailerModule.html":{}}}],["oth",{"_index":646,"title":{},"body":{"injectables/LogServive.html":{}}}],["out",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":1005,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":901,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BaseService.html":{},"classes/ConfigService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"controllers/UserController.html":{}}}],["param,req",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["param,request",{"_index":92,"title":{},"body":{"controllers/AppController.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":919,"title":{},"body":{"dependencies.html":{}}}],["pass",{"_index":534,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["passport",{"_index":604,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["passportstrategy",{"_index":606,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":607,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":38,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{},"classes/Users.html":{}}}],["path",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"injectables/LogServive.html":{}}}],["pattern",{"_index":639,"title":{},"body":{"injectables/LogServive.html":{}}}],["payload",{"_index":601,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":614,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":615,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["plain",{"_index":594,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["please",{"_index":180,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{}}}],["pm2",{"_index":648,"title":{},"body":{"injectables/LogServive.html":{}}}],["pooled",{"_index":739,"title":{},"body":{"injectables/MailerService.html":{}}}],["port",{"_index":462,"title":{},"body":{"classes/ConfigService.html":{},"modules/CoreModule.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["ports",{"_index":583,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["post",{"_index":93,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["post('activeregister",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":161,"title":{},"body":{"controllers/ArticleController.html":{},"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["primarygeneratedcolumn",{"_index":813,"title":{},"body":{"classes/Users.html":{}}}],["private",{"_index":51,"title":{},"body":{"classes/ApiException.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":459,"title":{},"body":{"classes/ConfigService.html":{},"index.html":{}}}],["promise",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BaseService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["promise(async",{"_index":725,"title":{},"body":{"injectables/MailerService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"interfaces/BaseInterface.html":{},"injectables/BaseService.html":{},"classes/ConfigService.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/LogServive.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"classes/ResgisterDto.html":{},"interfaces/UserInterface.html":{},"classes/Users.html":{},"injectables/UsersService.html":{}}}],["property",{"_index":975,"title":{},"body":{"miscellaneous/functions.html":{}}}],["provide",{"_index":410,"title":{},"body":{"modules/ConfigModule.html":{},"modules/MailerModule.html":{}}}],["provider",{"_index":703,"title":{},"body":{"modules/MailerModule.html":{}}}],["providers",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["provision",{"_index":460,"title":{},"body":{"classes/ConfigService.html":{}}}],["public",{"_index":625,"title":{},"body":{"injectables/LogServive.html":{},"injectables/MailerService.html":{}}}],["query",{"_index":95,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/BaseService.html":{},"injectables/UsersService.html":{}}}],["readonly",{"_index":9,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"injectables/MailerService.html":{},"classes/ResgisterDto.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{}}}],["receivers",{"_index":589,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["record",{"_index":446,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/typealiases.html":{}}}],["redis",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["reflect",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(body",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["register(data:resgisterdto",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["reject(error",{"_index":730,"title":{},"body":{"injectables/MailerService.html":{}}}],["render('index",{"_index":107,"title":{},"body":{"controllers/AppController.html":{}}}],["render('register",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{}}}],["render('test",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["renderregister",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["renderregister(@req",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["renderregister(req",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["repository",{"_index":373,"title":{},"body":{"injectables/BaseService.html":{},"injectables/UsersService.html":{}}}],["repwd",{"_index":41,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["req",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{}}}],["req,@query",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.csrftoken",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":106,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user.username",{"_index":776,"title":{},"body":{"controllers/UserController.html":{}}}],["request",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TestMiddleware.html":{}}}],["requestmethod",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["require(\"nodemailer",{"_index":719,"title":{},"body":{"injectables/MailerService.html":{},"miscellaneous/variables.html":{}}}],["require('crypto",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TestMiddleware.html":{}}}],["res,httpstatus,useguards",{"_index":769,"title":{},"body":{"controllers/UserController.html":{}}}],["res,useguards",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.json(result",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resgisterdto",{"_index":39,"title":{"classes/ResgisterDto.html":{}},"body":{"classes/ActiveRegisterDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{},"coverage.html":{}}}],["resolve('success",{"_index":736,"title":{},"body":{"injectables/MailerService.html":{}}}],["resolve,reject",{"_index":726,"title":{},"body":{"injectables/MailerService.html":{}}}],["response",{"_index":555,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{}}}],["result",{"_index":44,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseInterface.html":{},"injectables/BaseService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/ResgisterDto.html":{},"modules/ServicesModule.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":46,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseInterface.html":{},"injectables/BaseService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/ResgisterDto.html":{},"modules/ServicesModule.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":78,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":68,"title":{},"body":{"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BaseService.html":{},"classes/ConfigService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["run",{"_index":983,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":732,"title":{},"body":{"injectables/MailerService.html":{}}}],["save",{"_index":377,"title":{},"body":{"injectables/BaseService.html":{},"injectables/UsersService.html":{}}}],["save(data",{"_index":384,"title":{},"body":{"injectables/BaseService.html":{},"injectables/UsersService.html":{}}}],["save(data):promise",{"_index":394,"title":{},"body":{"injectables/BaseService.html":{}}}],["secret",{"_index":273,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":612,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":530,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["secureconnection",{"_index":531,"title":{},"body":{"modules/CoreModule.html":{}}}],["sendactivemail",{"_index":671,"title":{},"body":{"injectables/MailService.html":{}}}],["sendactivemail(to",{"_index":675,"title":{},"body":{"injectables/MailService.html":{}}}],["sender",{"_index":586,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["sendmail",{"_index":711,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendmail(sendmailoption",{"_index":715,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendmail(sendmailoption:isendmail",{"_index":724,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendmailoption",{"_index":717,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendstate",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["sent",{"_index":733,"title":{},"body":{"injectables/MailerService.html":{}}}],["service",{"_index":524,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/services.modules",{"_index":402,"title":{},"body":{"modules/CommonModule.html":{}}}],["servicesmodule",{"_index":400,"title":{"modules/ServicesModule.html":{}},"body":{"modules/CommonModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["session",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["set",{"_index":181,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"modules/UsersModule.html":{}}}],["settings",{"_index":184,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{}}}],["signoptions",{"_index":275,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["smtp",{"_index":527,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/ArticleController.html":{},"modules/ArticleModule.html":{},"injectables/ArticleService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/BaseInterface.html":{},"injectables/BaseService.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/ResgisterDto.html":{},"modules/ServicesModule.html":{},"injectables/TestMiddleware.html":{},"controllers/UserController.html":{},"interfaces/UserInterface.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["src/.../api",{"_index":952,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../app.ts",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.service.ts",{"_index":1011,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../constants.ts",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mailer.service.ts",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":967,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../util.ts",{"_index":968,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../validator.decorators.ts",{"_index":969,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:19",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:21",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":156,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":158,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/common.module.ts",{"_index":401,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/interfaces/interface.ts",{"_index":366,"title":{},"body":{"interfaces/BaseInterface.html":{},"coverage.html":{}}}],["src/common/log/log.service.ts",{"_index":624,"title":{},"body":{"injectables/LogServive.html":{},"coverage.html":{}}}],["src/common/log/log.service.ts:41",{"_index":627,"title":{},"body":{"injectables/LogServive.html":{}}}],["src/common/log/log.service.ts:45",{"_index":629,"title":{},"body":{"injectables/LogServive.html":{}}}],["src/common/middleware/logger.middleware.ts",{"_index":657,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/common/middleware/logger.middleware.ts:10",{"_index":663,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/common/middleware/logger.middleware.ts:6",{"_index":660,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/common/middleware/test.middleware.ts",{"_index":756,"title":{},"body":{"injectables/TestMiddleware.html":{},"coverage.html":{}}}],["src/common/middleware/test.middleware.ts:10",{"_index":758,"title":{},"body":{"injectables/TestMiddleware.html":{}}}],["src/common/middleware/test.middleware.ts:6",{"_index":757,"title":{},"body":{"injectables/TestMiddleware.html":{}}}],["src/common/mysql/base.service.ts",{"_index":372,"title":{},"body":{"injectables/BaseService.html":{},"coverage.html":{}}}],["src/common/mysql/base.service.ts:15",{"_index":381,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/common/mysql/base.service.ts:25",{"_index":383,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/common/mysql/base.service.ts:35",{"_index":380,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/common/mysql/base.service.ts:39",{"_index":385,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/common/mysql/base.service.ts:6",{"_index":378,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/common/mysql/base.service.ts:8",{"_index":386,"title":{},"body":{"injectables/BaseService.html":{}}}],["src/common/services/mail.service.ts",{"_index":670,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/common/services/mail.service.ts:10",{"_index":674,"title":{},"body":{"injectables/MailService.html":{}}}],["src/common/services/mail.service.ts:19",{"_index":676,"title":{},"body":{"injectables/MailService.html":{}}}],["src/common/services/mail.service.ts:8",{"_index":677,"title":{},"body":{"injectables/MailService.html":{}}}],["src/common/services/mail.service.ts:9",{"_index":678,"title":{},"body":{"injectables/MailService.html":{}}}],["src/common/services/services.modules.ts",{"_index":749,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/common/util.ts",{"_index":879,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/config/app.ts",{"_index":884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/config/config.module.ts",{"_index":408,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/core/config/config.service.ts",{"_index":414,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/core/config/config.service.ts:16",{"_index":422,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/core/config/config.service.ts:28",{"_index":429,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/core/config/config.service.ts:56",{"_index":441,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/core/config/config.service.ts:59",{"_index":427,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/core/config/config.service.ts:69",{"_index":424,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/core/core.module.ts",{"_index":498,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/core/decorators/validator.decorators.ts",{"_index":887,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/core/enums/api",{"_index":954,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/core/exceptions/api.exception.ts",{"_index":48,"title":{},"body":{"classes/ApiException.html":{},"coverage.html":{}}}],["src/core/exceptions/api.exception.ts:17",{"_index":67,"title":{},"body":{"classes/ApiException.html":{}}}],["src/core/exceptions/api.exception.ts:21",{"_index":69,"title":{},"body":{"classes/ApiException.html":{}}}],["src/core/exceptions/api.exception.ts:6",{"_index":66,"title":{},"body":{"classes/ApiException.html":{}}}],["src/core/exceptions/api.exception.ts:7",{"_index":62,"title":{},"body":{"classes/ApiException.html":{}}}],["src/core/exceptions/http",{"_index":545,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/core/mailer/mailer.interface.ts",{"_index":580,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"coverage.html":{}}}],["src/core/mailer/mailer.module.ts",{"_index":688,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/core/mailer/mailer.module.ts:18",{"_index":693,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/core/mailer/mailer.module.ts:35",{"_index":698,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/core/mailer/mailer.service.ts",{"_index":709,"title":{},"body":{"injectables/MailerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/mailer/mailer.service.ts:16",{"_index":713,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/core/mailer/mailer.service.ts:28",{"_index":716,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/feature/article/article.controller.ts",{"_index":160,"title":{},"body":{"controllers/ArticleController.html":{},"coverage.html":{}}}],["src/feature/article/article.module.ts",{"_index":169,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/feature/article/article.service.ts",{"_index":191,"title":{},"body":{"injectables/ArticleService.html":{},"coverage.html":{}}}],["src/feature/auth/auth.controller.ts",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/feature/auth/auth.controller.ts:16",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/feature/auth/auth.controller.ts:23",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/feature/auth/auth.controller.ts:29",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/feature/auth/auth.controller.ts:35",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/feature/auth/auth.controller.ts:44",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/feature/auth/auth.module.ts",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/feature/auth/auth.service.ts",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/feature/auth/auth.service.ts:122",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/feature/auth/auth.service.ts:126",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/feature/auth/auth.service.ts:13",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/feature/auth/auth.service.ts:25",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/feature/auth/auth.service.ts:38",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/feature/auth/auth.service.ts:77",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/feature/auth/constants.ts",{"_index":892,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/feature/auth/dto/auth.dto.ts",{"_index":6,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{},"coverage.html":{}}}],["src/feature/auth/dto/auth.dto.ts:19",{"_index":669,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/feature/auth/dto/auth.dto.ts:23",{"_index":668,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/feature/auth/dto/auth.dto.ts:33",{"_index":744,"title":{},"body":{"classes/ResgisterDto.html":{}}}],["src/feature/auth/dto/auth.dto.ts:37",{"_index":742,"title":{},"body":{"classes/ResgisterDto.html":{}}}],["src/feature/auth/dto/auth.dto.ts:44",{"_index":743,"title":{},"body":{"classes/ResgisterDto.html":{}}}],["src/feature/auth/dto/auth.dto.ts:51",{"_index":741,"title":{},"body":{"classes/ResgisterDto.html":{}}}],["src/feature/auth/dto/auth.dto.ts:62",{"_index":25,"title":{},"body":{"classes/ActiveRegisterDto.html":{}}}],["src/feature/auth/dto/auth.dto.ts:66",{"_index":18,"title":{},"body":{"classes/ActiveRegisterDto.html":{}}}],["src/feature/auth/jwt.strategy.ts",{"_index":596,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/feature/auth/jwt.strategy.ts:16",{"_index":600,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/feature/auth/jwt.strategy.ts:7",{"_index":598,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/feature/auth/local.strategy.ts",{"_index":616,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/feature/auth/local.strategy.ts:12",{"_index":620,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/feature/auth/local.strategy.ts:7",{"_index":618,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/feature/feature.module.ts",{"_index":541,"title":{},"body":{"modules/FeatureModule.html":{}}}],["src/feature/users/user.interface.ts",{"_index":782,"title":{},"body":{"interfaces/UserInterface.html":{},"coverage.html":{}}}],["src/feature/users/users.controller.ts",{"_index":762,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/feature/users/users.controller.ts:22",{"_index":767,"title":{},"body":{"controllers/UserController.html":{}}}],["src/feature/users/users.entity.ts",{"_index":785,"title":{},"body":{"classes/Users.html":{},"coverage.html":{}}}],["src/feature/users/users.entity.ts:14",{"_index":814,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.entity.ts:17",{"_index":821,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.entity.ts:20",{"_index":816,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.entity.ts:23",{"_index":805,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.entity.ts:26",{"_index":808,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.entity.ts:29",{"_index":809,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.entity.ts:34",{"_index":801,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.entity.ts:37",{"_index":818,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.entity.ts:40",{"_index":817,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.entity.ts:43",{"_index":807,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.entity.ts:46",{"_index":800,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.entity.ts:49",{"_index":811,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.entity.ts:52",{"_index":812,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.entity.ts:55",{"_index":810,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.entity.ts:58",{"_index":803,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.entity.ts:61",{"_index":820,"title":{},"body":{"classes/Users.html":{}}}],["src/feature/users/users.module.ts",{"_index":842,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/feature/users/users.service.ts",{"_index":851,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/feature/users/users.service.ts:16",{"_index":857,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/feature/users/users.service.ts:8",{"_index":854,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/main.ts",{"_index":898,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":984,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":987,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":988,"title":{},"body":{"index.html":{}}}],["started",{"_index":978,"title":{"index.html":{}},"body":{}}],["statements",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":689,"title":{},"body":{"modules/MailerModule.html":{}}}],["status",{"_index":562,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["status(200",{"_index":574,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["statuscode",{"_index":60,"title":{},"body":{"classes/ApiException.html":{}}}],["stdout",{"_index":635,"title":{},"body":{"injectables/LogServive.html":{}}}],["strategy",{"_index":603,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":14,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"interfaces/BaseInterface.html":{},"classes/ConfigService.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/ResgisterDto.html":{},"interfaces/UserInterface.html":{},"classes/Users.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":591,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/MailService.html":{}}}],["subject:string",{"_index":590,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["success",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{}}}],["super",{"_index":608,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["super(errormessage",{"_index":75,"title":{},"body":{"classes/ApiException.html":{}}}],["support",{"_index":1000,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1001,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":518,"title":{},"body":{"modules/CoreModule.html":{}}}],["t",{"_index":692,"title":{},"body":{"modules/MailerModule.html":{}}}],["table",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":971,"title":{},"body":{"miscellaneous/functions.html":{}}}],["test",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"classes/ConfigService.html":{},"index.html":{}}}],["test(@req",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["test(req",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["test:cov",{"_index":993,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":992,"title":{},"body":{"index.html":{}}}],["testmiddleware",{"_index":755,"title":{"injectables/TestMiddleware.html":{}},"body":{"injectables/TestMiddleware.html":{},"coverage.html":{}}}],["tests",{"_index":990,"title":{},"body":{"index.html":{}}}],["testsendemail",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["text",{"_index":593,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"classes/Users.html":{}}}],["this.authservice.activeregister(body",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(body",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(body",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.testsendemail",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":623,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.configservice.getstring('host')}:${this.configservice.getstring('port",{"_index":684,"title":{},"body":{"injectables/MailService.html":{}}}],["this.envconfig",{"_index":451,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig[item",{"_index":493,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.envconfig[key",{"_index":487,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.errorcode",{"_index":77,"title":{},"body":{"classes/ApiException.html":{}}}],["this.errormessage",{"_index":76,"title":{},"body":{"classes/ApiException.html":{}}}],["this.from",{"_index":685,"title":{},"body":{"injectables/MailService.html":{}}}],["this.host",{"_index":683,"title":{},"body":{"injectables/MailService.html":{}}}],["this.jwtservice.sign(data",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger",{"_index":652,"title":{},"body":{"injectables/LogServive.html":{}}}],["this.logger.error(msg",{"_index":656,"title":{},"body":{"injectables/LogServive.html":{}}}],["this.logger.info(msg",{"_index":654,"title":{},"body":{"injectables/LogServive.html":{}}}],["this.logger.log",{"_index":665,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.logger.log(111",{"_index":108,"title":{},"body":{"controllers/AppController.html":{}}}],["this.logger.log(`${json.stringify(req.originalurl",{"_index":666,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.logger.log(json.stringify(result",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.mailer.sendactivemail('linhaifeng3@huya.com','123','123",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.sendactivemail('linhaifeng3@huya.com',token,user.username",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailer.sendmail",{"_index":687,"title":{},"body":{"injectables/MailService.html":{}}}],["this.name",{"_index":681,"title":{},"body":{"injectables/MailService.html":{}}}],["this.repository",{"_index":866,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.repository.find",{"_index":391,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.find(query",{"_index":393,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.findone(query",{"_index":392,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.save(data",{"_index":395,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.save(user",{"_index":868,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.transporter",{"_index":722,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.transporter.close",{"_index":737,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.transporter.sendmail(sendmailoption",{"_index":727,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.userservice.findone",{"_index":777,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersrepository",{"_index":867,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.findone(username",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone({email",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone({username",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.save(user",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.validateinput(config",{"_index":452,"title":{},"body":{"classes/ConfigService.html":{}}}],["throw",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"classes/ConfigService.html":{},"injectables/LocalStrategy.html":{}}}],["timeout",{"_index":955,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tls",{"_index":584,"title":{},"body":{"interfaces/IOption.html":{},"interfaces/ISendMail.html":{}}}],["toekn_invalid",{"_index":964,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["token",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["token:${token",{"_index":686,"title":{},"body":{"injectables/MailService.html":{}}}],["token的属性，时间为3600*10就是十小时,其余配置可以看jwt",{"_index":850,"title":{},"body":{"modules/UsersModule.html":{}}}],["transform",{"_index":31,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["transformer",{"_index":32,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{},"dependencies.html":{}}}],["transporter",{"_index":710,"title":{},"body":{"injectables/MailerService.html":{}}}],["true",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/LogServive.html":{}}}],["try",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailService.html":{}}}],["type",{"_index":12,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/ApiException.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/BaseInterface.html":{},"classes/ConfigService.html":{},"modules/CoreModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/ResgisterDto.html":{},"injectables/TestMiddleware.html":{},"interfaces/UserInterface.html":{},"classes/Users.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type:'text",{"_index":828,"title":{},"body":{"classes/Users.html":{}}}],["type:'user",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["typealiases",{"_index":1009,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":389,"title":{},"body":{"injectables/BaseService.html":{},"classes/Users.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":504,"title":{},"body":{"modules/CoreModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([users",{"_index":848,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":506,"title":{},"body":{"modules/CoreModule.html":{}}}],["types/express",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["types/passport",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["unit",{"_index":989,"title":{},"body":{"index.html":{}}}],["update_at",{"_index":369,"title":{},"body":{"interfaces/BaseInterface.html":{}}}],["update_time",{"_index":796,"title":{},"body":{"classes/Users.html":{}}}],["update_time:date",{"_index":837,"title":{},"body":{"classes/Users.html":{}}}],["updatedatecolumn",{"_index":819,"title":{},"body":{"classes/Users.html":{}}}],["use",{"_index":658,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/TestMiddleware.html":{}}}],["use(req",{"_index":661,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/TestMiddleware.html":{}}}],["usefactory",{"_index":507,"title":{},"body":{"modules/CoreModule.html":{},"modules/MailerModule.html":{}}}],["useguards",{"_index":94,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(authguard('jwt",{"_index":102,"title":{},"body":{"controllers/AppController.html":{},"controllers/UserController.html":{}}}],["useguards(undefined)@get('info",{"_index":766,"title":{},"body":{"controllers/UserController.html":{}}}],["useguards(undefined)@get('profile",{"_index":86,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":183,"title":{},"body":{"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"interfaces/IOption.html":{},"interfaces/ISendMail.html":{},"injectables/LocalStrategy.html":{},"modules/MailerModule.html":{},"modules/ServicesModule.html":{},"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["user.active",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.email",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id_invalid",{"_index":956,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_no_exit",{"_index":962,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["usercontroller",{"_index":761,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userid",{"_index":613,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userinterface",{"_index":781,"title":{"interfaces/UserInterface.html":{}},"body":{"interfaces/UserInterface.html":{},"coverage.html":{}}}],["username",{"_index":11,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginDto.html":{},"injectables/MailService.html":{},"classes/ResgisterDto.html":{},"interfaces/UserInterface.html":{},"classes/Users.html":{}}}],["username,password",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["username:data.username",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["username:req.user.username",{"_index":778,"title":{},"body":{"controllers/UserController.html":{}}}],["username_invalid",{"_index":958,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["users",{"_index":784,"title":{"classes/Users.html":{}},"body":{"classes/Users.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.controller",{"_index":845,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.entity",{"_index":846,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":770,"title":{},"body":{"controllers/UserController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{},"modules/FeatureModule.html":{}}}],["users/users.service",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["userservice",{"_index":772,"title":{},"body":{"controllers/UserController.html":{}}}],["usersmodule",{"_index":257,"title":{"modules/UsersModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/FeatureModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":855,"title":{},"body":{"injectables/UsersService.html":{}}}],["usersservice",{"_index":284,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usevalue",{"_index":411,"title":{},"body":{"modules/ConfigModule.html":{},"modules/MailerModule.html":{}}}],["using",{"_index":738,"title":{},"body":{"injectables/MailerService.html":{}}}],["utility",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["val['constraints']['matches",{"_index":573,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["valid('development",{"_index":458,"title":{},"body":{"classes/ConfigService.html":{}}}],["validate",{"_index":597,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":599,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":619,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validated",{"_index":433,"title":{},"body":{"classes/ConfigService.html":{}}}],["validatedenvconfig",{"_index":479,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateinput",{"_index":418,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateinput(envconfig",{"_index":428,"title":{},"body":{"classes/ConfigService.html":{}}}],["validateuser",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["validation",{"_index":482,"title":{},"body":{"classes/ConfigService.html":{}}}],["validationoptions",{"_index":974,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":30,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":478,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":439,"title":{},"body":{"classes/ConfigService.html":{}}}],["variable",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":432,"title":{"miscellaneous/variables.html":{}},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LogServive.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TestMiddleware.html":{}}}],["watch",{"_index":985,"title":{},"body":{"index.html":{}}}],["world",{"_index":110,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["xx",{"_index":682,"title":{},"body":{"injectables/MailService.html":{}}}],["yes",{"_index":976,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yyyy",{"_index":640,"title":{},"body":{"injectables/LogServive.html":{}}}],["z0",{"_index":21,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["za",{"_index":20,"title":{},"body":{"classes/ActiveRegisterDto.html":{},"classes/LoginDto.html":{},"classes/ResgisterDto.html":{}}}],["zoom",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/ConfigModule.html":{},"modules/CoreModule.html":{},"modules/FeatureModule.html":{},"modules/ServicesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ActiveRegisterDto.html":{"url":"classes/ActiveRegisterDto.html","title":"class - ActiveRegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActiveRegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feature/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                key\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            key\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '邮箱不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/auth/dto/auth.dto.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '用户名不能为空'})@Matches(/^[a-zA-Z0-9\\-_]{5,20}$/i, {message: '用户名不合法'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/auth/dto/auth.dto.ts:62\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsInt,Matches, IsEmail,IsNotEmpty,NotEquals } from 'class-validator';\nimport {Transform} from 'class-transformer';\nimport { IsEqualsThan } from '../../../core/decorators/validator.decorators';\nexport class LoginDto {\n  @IsNotEmpty({\n    message: '用户名不能为空',\n  })\n  @Matches(/^[a-zA-Z0-9\\-_]{5,20}$/i, {\n    message: '用户名不合法',\n  })\n  readonly username: string;\n  @IsNotEmpty({\n    message: '密码不能为空',\n  })\n  readonly password: string;\n}\n\nexport class ResgisterDto {\n  @IsNotEmpty({\n    message: '用户名不能为空',\n  })\n  @Matches(/^[a-zA-Z0-9\\-_]{5,20}$/i, {\n    message: '用户名不合法',\n  })\n  readonly username: string;\n  @IsNotEmpty({\n    message: '密码不能为空',\n  })\n  readonly password: string;\n  @IsNotEmpty({\n    message: '确认密码不能为空',\n  })\n  @IsEqualsThan('password', {\n    message: '两次密码输入不一致。',\n  })\n  readonly repwd: string;\n  @IsNotEmpty({\n    message: '邮箱不能为空',\n  })\n  @IsEmail({}, {\n    message: '邮箱不合法',\n  })\n  readonly email: string;\n}\n\n\nexport class ActiveRegisterDto {\n  @IsNotEmpty({\n    message: '用户名不能为空',\n  })\n  @Matches(/^[a-zA-Z0-9\\-_]{5,20}$/i, {\n    message: '用户名不合法',\n  })\n  readonly username: string;\n  @IsNotEmpty({\n    message: '邮箱不能为空',\n  })\n  readonly key: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApiException.html":{"url":"classes/ApiException.html","title":"class - ApiException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApiException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/exceptions/api.exception.ts\n        \n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorCode\n                            \n                            \n                                    Private\n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrorCode\n                            \n                            \n                                getErrorMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorMessage: string, errorCode: ApiErrorCode, statusCode: HttpStatus)\n                    \n                \n                        \n                            \n                                Defined in src/core/exceptions/api.exception.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorMessage\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        ApiErrorCode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        statusCode\n                                                  \n                                                        \n                                                                    HttpStatus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiErrorCode\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/exceptions/api.exception.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/exceptions/api.exception.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrorCode\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrorCode()\n                \n            \n\n\n            \n                \n                    Defined in src/core/exceptions/api.exception.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ApiErrorCode\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrorMessage\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrorMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/core/exceptions/api.exception.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\nimport { ApiErrorCode } from '../enums/api-error-code.enum';\n\nexport class ApiException extends HttpException {\n\n  private errorMessage: string;\n  private errorCode: ApiErrorCode;\n\n  constructor(errorMessage: string, errorCode: ApiErrorCode, statusCode: HttpStatus = 200) {\n\n    super(errorMessage, statusCode);\n\n    this.errorMessage = errorMessage;\n    this.errorCode = errorCode;\n  }\n\n  getErrorCode(): ApiErrorCode {\n    return this.errorCode;\n  }\n\n  getErrorMessage(): string {\n    return this.errorMessage;\n  }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getProfile\n                            \n                            \n                                root\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            root\n                        \n                        \n                    \n                \n            \n            \n                \nroot()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@Render('index')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { message: string; }\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get,Render, Param,Request, Post, UseGuards, Query } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LogServive } from './common/log/log.service';\n\n\n@Controller()\nexport class AppController {\n  constructor(private readonly logger:LogServive,) {\n\n  } \n  @UseGuards(AuthGuard('jwt'))\n  @Get('profile')\n  getProfile(@Request() req) {\n    console.log(req.user)\n    return req.user;\n  }\n  @Get('/')\n  @Render('index')\n  root() {\n    this.logger.log(111);\n    return { message: 'Hello world!' };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nAppModule -->\n\nFeatureModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nLogServive\n\nLogServive\n\nAppModule -->\n\nLogServive->AppModule\n\n\n\n\n\nLoggerMiddleware\n\nLoggerMiddleware\n\nAppModule -->\n\nLoggerMiddleware->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            LogServive\n                        \n                        \n                            LoggerMiddleware\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FeatureModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            configure\n                        \n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, MiddlewareConsumer, RequestMethod } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { AppController } from './app.controller';\nimport { FeatureModule } from './feature/feature.module';\nimport { CoreModule } from './core/core.module';\nimport { CommonModule } from './common/common.module';\nimport { LogServive } from './common/log/log.service';\nimport { LoggerMiddleware } from './common/middleware/logger.middleware';\n\n\n@Module({\n  imports: [\n    FeatureModule,\n    CoreModule,\n    CommonModule\n  ],\n  controllers:[AppController],\n  providers: [AppService,LogServive,LoggerMiddleware],\n})\nexport class AppModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .forRoutes({ path: '/api/*', method: RequestMethod.ALL });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ArticleController.html":{"url":"controllers/ArticleController.html","title":"controller - ArticleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ArticleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feature/article/article.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                article\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('article')\nexport class ArticleController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticleModule.html":{"url":"modules/ArticleModule.html","title":"module - ArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_exports\n\n\n\ncluster_ArticleModule_providers\n\n\n\n\nArticleService \n\nArticleService \n\n\n\nArticleModule\n\nArticleModule\n\nArticleService  -->\n\nArticleModule->ArticleService \n\n\n\n\n\nArticleService\n\nArticleService\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/feature/article/article.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ArticleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ArticleController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ArticleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * @Author: your name\n * @Date: 2019-12-02 15:03:49\n * @LastEditTime : 2019-12-23 17:06:38\n * @LastEditors  : Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\nestjs\\src\\feature\\article\\article.module.ts\n */\nimport { Module } from '@nestjs/common';\nimport { ArticleController } from './article.controller';\nimport { ArticleService } from './article.service';\n\n@Module({\n  controllers: [ArticleController],\n  providers: [ArticleService],\n  exports:[ArticleService]\n})\nexport class ArticleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArticleService.html":{"url":"injectables/ArticleService.html","title":"injectable - ArticleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ArticleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feature/article/article.service.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ArticleService {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feature/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activeRegister\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                renderRegister\n                            \n                            \n                                    Async\n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            activeRegister\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    activeRegister(body: ActiveRegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('activeRegister')\n                \n            \n\n            \n                \n                    Defined in src/feature/auth/auth.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                ActiveRegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(body, next, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n            \n                \n                    Defined in src/feature/auth/auth.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(body: ResgisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n            \n                \n                    Defined in src/feature/auth/auth.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                ResgisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            renderRegister\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    renderRegister(req, query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('register')@Render('register')\n                \n            \n\n            \n                \n                    Defined in src/feature/auth/auth.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            test\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    test(req, query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('test')\n                \n            \n\n            \n                \n                    Defined in src/feature/auth/auth.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Controller, Get,Render, Param,Req, Post, Res,UseGuards, Query, Body, BadRequestException, Next, Logger } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LoginDto, ResgisterDto, ActiveRegisterDto } from './dto/auth.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { LogServive } from '../../common/log/log.service';\n\n@Controller('api/auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService,\n    private readonly logger: LogServive\n    ) {}\n  // 登录\n  @Post('login')\n  async login(@Body() body,@Next() next, @Res() res) {\n    const result =  await this.authService.login(body);\n    this.logger.log(JSON.stringify(result));\n    res.json(result);\n  }\n  // 注册\n  @Post('register')\n  async register(@Body() body:ResgisterDto) {\n     return await this.authService.register(body);\n  }\n\n   // 注册验证邮箱\n  @Post('activeRegister')\n  async activeRegister(@Body() body:ActiveRegisterDto) {\n    return await this.authService.activeRegister(body);\n  }\n  \n  @Get('register')\n  @Render('register')\n  async renderRegister(@Req() req,@Query() query) {\n    console.log(query);\n    return {\n      csrf :req.csrfToken()\n    }\n  }\n  \n  @Get('test')\n  // @Render('test')\n  async test(@Req() req,@Query() query) {\n    return await this.authService.testSendEmail();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nLogServive\n\nLogServive\n\nAuthModule -->\n\nLogServive->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/feature/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            LogServive\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * @Author: your name\n * @Date: 2019-12-02 15:03:49\n * @LastEditTime : 2019-12-23 17:36:30\n * @LastEditors  : Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\nestjs\\src\\feature\\auth\\auth.module.ts\n */\nimport { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\nimport { AuthController } from './auth.controller';\nimport { CommonModule } from '../../common/common.module';\nimport { LogServive } from '../../common/log/log.service';\n\n@Module({\n  imports: [\n    CommonModule,\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '1h' },\n    }),\n  ],\n  controllers:[AuthController],\n  providers: [AuthService, LocalStrategy, JwtStrategy,LogServive\n  ],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feature/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                activeRegister\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                testSendEmail\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, mailer: MailService, logger: LogServive)\n                    \n                \n                        \n                            \n                                Defined in src/feature/auth/auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LogServive\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            activeRegister\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    activeRegister(data: ActiveRegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/feature/auth/auth.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ActiveRegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(data: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/feature/auth/auth.service.ts:38\n                \n            \n\n\n            \n                \n                    登陆\n登陆成功后返回token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: ResgisterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/feature/auth/auth.service.ts:77\n                \n            \n\n\n            \n                \n                    注册\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                ResgisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            testSendEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    testSendEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/feature/auth/auth.service.ts:122\n                \n            \n\n\n            \n                \n                    测试发送邮件\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/feature/auth/auth.service.ts:25\n                \n            \n\n\n            \n                \n                    重新验证\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException, HttpException, HttpStatus,Response } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { LoginDto, ResgisterDto, ActiveRegisterDto } from './dto/auth.dto';\nimport { ApiException } from '../../core/exceptions/api.exception';\nimport { ApiErrorCode } from '../../core/enums/api-error-code.enum';\nimport { md5, encryptMD5, diffEncryptMD5 } from '../../common/util';\nimport { MailService } from '../../common/services/mail.service';\nimport {SECRET} from  '../../config/app'\nimport { LogServive } from '../../common/log/log.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly jwtService: JwtService,\n    private readonly mailer:MailService,\n    private readonly logger:LogServive,\n  ) {}\n/**\n * 重新验证\n * @param username \n * @param password \n */\n  async validateUser(username: string, password: string): Promise {\n    const user = await this.usersService.findOne(username);\n    if (user && user.password === password) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n  /**\n   * 登陆\n   * 登陆成功后返回token\n   * @param data \n   */\n  async login(data: LoginDto) {\n    const {username,password} = data;\n    \n    if(!username || ! password) {\n      return {\n        code: 200,\n        message: '用户名或密码为空！',\n      };\n    }\n    const user = await this.usersService.findOne({username});\n    if(!user) {\n      return {\n        code: 200,\n        message: '不存在用户',\n      };\n    }\n    if(md5(password) !== user.password) {\n      return {\n        code: 200,\n        message: '密码有误',\n      };\n    }\n    delete user.password;\n    \n    return {\n      code: 200,\n      data:{\n        username:data.username,\n        token: this.jwtService.sign(data),\n      },\n      message: '登录成功',\n    };\n  }\n  /**\n   * 注册\n   *\n   * @param {ResgisterDto} data\n   * @memberof AuthService\n   */\n  async register(data:ResgisterDto) {\n    const { username, email } = data;\n    let exitUsername = await this.usersService.findOne({username});\n    if(exitUsername) {\n      throw new ApiException('用户名已存在',ApiErrorCode.USERNAME_INVALID);\n    } else {\n      let exitEmail = await this.usersService.findOne({email});\n      if(exitEmail) {\n        throw new ApiException('邮箱已存在',ApiErrorCode.EMAIL_INVALID);\n      }\n    }\n    let user = {\n      ...data,\n      nick_name:data.username,\n      password: md5(data.password),\n      avatar:'https://huyaimg.msstatic.com/avatar/1076/7e/e1d48955f39a25fb944f4dedb3ed16_180_135.jpg',\n      type:'user',\n    }\n    try{\n      let res = await this.usersService.save(user);\n      if(res) {\n        const token = encryptMD5(user.email + user.password + SECRET);\n        // 发送验证邮件\n        let sendState = await this.mailer.sendActiveMail('linhaifeng3@huya.com',token,user.username);\n        if(sendState === 'success') {\n          return {\n            code : 200,\n            msg: 'success'\n          }\n        } else {\n          throw new ApiException('邮件发送失败',ApiErrorCode.TIMEOUT);\n        }\n       \n      }\n    } catch (e) {\n      throw new ApiException(e,ApiErrorCode.TIMEOUT);\n    }\n   \n  }\n /**\n  * 测试发送邮件\n  *  \n  * @returns\n  * @memberof AuthService\n  */\n  async testSendEmail(){\n    return await this.mailer.sendActiveMail('linhaifeng3@huya.com','123','123');\n  }\n\n  async activeRegister(data:ActiveRegisterDto) {\n    const { username, key } = data;\n    \n    let user = await this.usersService.findOne({username});\n    if(!user) {\n      throw new ApiException('用户不存在',ApiErrorCode.USER_NO_EXIT);\n    }\n    let keyCode = user.email + user.password + SECRET;\n    // 对比key是否正确\n    if(!diffEncryptMD5(keyCode, key)) {\n      throw new ApiException('信息有误，帐号无法被激活。',ApiErrorCode.TOEKN_INVALID);\n    }\n    user.active = true;\n    try {\n      await this.usersService.save(user);\n      return {\n        code: 200,\n        msg: '帐号已被激活'\n      }\n    } catch (e) {\n      throw new ApiException(e,ApiErrorCode.TIMEOUT);\n    }\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseInterface.html":{"url":"interfaces/BaseInterface.html","title":"interface - BaseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        create_at\n                                \n                                \n                                        id\n                                \n                                \n                                        update_at\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        create_at\n                                    \n                                \n                                \n                                    \n                                        create_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update_at\n                                    \n                                \n                                \n                                    \n                                        update_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BaseInterface {\n    id: number | string; // id\n    create_at: Date; // 创建时间\n    update_at: Date; // 更新时间\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseService.html":{"url":"injectables/BaseService.html","title":"injectable - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/mysql/base.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                repository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/mysql/base.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(query)\n                \n            \n\n\n            \n                \n                    Defined in src/common/mysql/base.service.ts:35\n                \n            \n\n\n            \n                \n                    条件查找 返回多个\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/common/mysql/base.service.ts:15\n                \n            \n\n\n            \n                \n                    查找全部\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query)\n                \n            \n\n\n            \n                \n                    Defined in src/common/mysql/base.service.ts:25\n                \n            \n\n\n            \n                \n                    条件查找返回一个数据\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(data)\n                \n            \n\n\n            \n                \n                    Defined in src/common/mysql/base.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repository\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/common/mysql/base.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport abstract class BaseService {\n  constructor() {}\n  repository;\n  /**\n   * 查找全部\n   *\n   * @returns {Promise}\n   * @memberof BaseService\n   */\n  async findAll(): Promise {\n    return await this.repository.find();\n  }\n  /**\n   *\n   * 条件查找返回一个数据\n   * @param {*} query\n   * @returns {Promise}\n   * @memberof BaseService\n   */\n  async findOne(query): Promise {\n    return await this.repository.findOne(query);\n  }\n  /**\n   *\n   * 条件查找 返回多个\n   * @param {*} query\n   * @returns {Promise}\n   * @memberof BaseService\n   */\n  async find(query): Promise {\n    return await this.repository.find(query);\n  }\n\n  async save(data):Promise {\n    return await this.repository.save(data);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_CommonModule_providers\n\n\n\n\nServicesModule\n\nServicesModule\n\n\n\nCommonModule\n\nCommonModule\n\nCommonModule -->\n\nServicesModule->CommonModule\n\n\n\n\n\nServicesModule \n\nServicesModule \n\nServicesModule  -->\n\nCommonModule->ServicesModule \n\n\n\n\n\nLogServive\n\nLogServive\n\nCommonModule -->\n\nLogServive->CommonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LogServive\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ServicesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ServicesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ServicesModule } from './services/services.modules';\nimport { LogServive } from './log/log.service';\n\n@Module({\n  imports:[\n    ServicesModule,\n  ],\n  providers:[\n    LogServive\n  ],\n  exports:[\n    ServicesModule\n  ]\n})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/config/config.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Module } from '@nestjs/common';\nimport { ConfigService } from './config.service';\n\n@Module({\n  providers: [\n    {\n      provide: ConfigService,\n      useValue: new ConfigService(`config/.env.${process.env.NODE_ENV || 'development'}`),\n    },\n  ],\n  exports: [ConfigService],\n})\nexport class ConfigModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                envConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getKeys\n                            \n                            \n                                getString\n                            \n                            \n                                    Private\n                                validateInput\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isApiAuthEnabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(filePath: string)\n                    \n                \n                        \n                            \n                                Defined in src/core/config/config.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filePath\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            envConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         EnvConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/config/config.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getKeys\n                        \n                        \n                    \n                \n            \n            \n                \ngetKeys(keys: [string])\n                \n            \n\n\n            \n                \n                    Defined in src/core/config/config.service.ts:69\n                \n            \n\n\n            \n                \n                    返回多个配置\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keys\n                                    \n                                            [string]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getString\n                        \n                        \n                    \n                \n            \n            \n                \ngetString(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/config/config.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateInput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateInput(envConfig: EnvConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/core/config/config.service.ts:28\n                \n            \n\n\n            \n                \n                    Ensures all needed variables are set, and returns the validated JavaScript object\nincluding the applied default values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    envConfig\n                                    \n                                                EnvConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         EnvConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isApiAuthEnabled\n                    \n                \n\n                \n                    \n                        getisApiAuthEnabled()\n                    \n                \n                            \n                                \n                                    Defined in src/core/config/config.service.ts:56\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import * as dotenv from 'dotenv';\nimport * as Joi from '@hapi/joi';\nimport * as fs from 'fs';\n\nexport type EnvConfig = Record;\n\nexport class ConfigService {\n  private readonly envConfig: EnvConfig;\n\n  constructor(filePath: string) {\n    filePath = filePath ? filePath: `config/${process.env.NODE_ENV || 'development'}.env` \n    const config = dotenv.parse(fs.readFileSync(filePath));\n    this.envConfig = this.validateInput(config);\n  }\n\n  /**\n   * Ensures all needed variables are set, and returns the validated JavaScript object\n   * including the applied default values.\n   */\n  private validateInput(envConfig: EnvConfig): EnvConfig {\n    const envVarsSchema: Joi.ObjectSchema = Joi.object({\n      NODE_ENV: Joi.string()\n        .valid('development', 'production', 'test', 'provision')\n        .default('development'),\n      PORT: Joi.number().default(3000),\n      API_AUTH_ENABLED: Joi.boolean().required(),\n      DATABASE_TYPE: Joi.string().required(),\n      DATABASE_HOST: Joi.string().required(),\n      DATABASE_PORT: Joi.string().required(),\n      DATABASE_USERNAME: Joi.string().required(),\n      DATABASE_PASSWORD: Joi.string().required(),\n      DATABASE_DATABASE: Joi.string().required(),\n      MAIL_HOST: Joi.string().required(),\n      MAIL_PORT: Joi.string().required(),\n      MAIL_USER: Joi.string().required(),\n      MAIL_PASS: Joi.string().required(),\n      MAIL_SERVICE: Joi.string().required(),\n    });\n\n    const { error, value: validatedEnvConfig } = envVarsSchema.validate(\n      envConfig,\n    );\n    if (error) {\n      throw new Error(`Config validation error: ${error.message}`);\n    }\n    return validatedEnvConfig;\n  }\n  get isApiAuthEnabled(): boolean {\n    return Boolean(this.envConfig.API_AUTH_ENABLED);\n  }\n  getString(key:string):string {\n    return this.envConfig[key]\n  }\n  /**\n   * 返回多个配置\n   *\n   * @param {[string]} keys\n   * @returns\n   * @memberof ConfigService\n   */\n  getKeys(keys:[string]) {\n    let obj = {};\n    keys.forEach((item)=>{\n      if(this.envConfig[item]) {\n        obj[item] = this.envConfig[item];\n      }\n    });\n    return obj;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nCoreModule -->\n\nMailerModule->CoreModule\n\n\n\n\n\nConfigModule \n\nConfigModule \n\nConfigModule  -->\n\nCoreModule->ConfigModule \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nCoreModule->MailerModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            MailerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            MailerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * @Author: your name\n * @Date: 2019-12-02 15:03:49\n * @LastEditTime : 2019-12-24 11:21:17\n * @LastEditors  : Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\nestjs\\src\\core\\core.module.ts\n */\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from './config/config.module';\nimport { MailerModule } from './mailer/mailer.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigService } from './config/config.service';\n\n@Module({\n  imports:[\n    ConfigModule,\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService) => {\n        return {\n          type: 'mysql',\n          host: configService.getString('DATABASE_HOST'),\n          port: configService.getString('DATABASE_PORT'),\n          username: configService.getString('DATABASE_USERNAME'),\n          password: configService.getString('DATABASE_PASSWORD'),\n          database: configService.getString('DATABASE_DATABASE'),\n          entities: ['dist/**/*.entity{.ts,.js}'], // 实体\n          synchronize: true,\n          logging: false, // 简单日志\n        };\n      },\n      inject: [ConfigService],\n    }),\n    // MailerModule,\n    MailerModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService) => {\n        const mailer = configService.getKeys(['MAIL_HOST','MAIL_PORT','MAIL_USER','MAIL_PASS','MAIL_SERVICE'])\n        return {\n          service: mailer.MAIL_SERVICE,\n          host: mailer.MAIL_HOST,     // 邮箱smtp地址\n          port: mailer.MAIL_PORT * 1, // 端口号\n          secure: true,\n          secureConnection: true,\n          auth: {\n              user: mailer.MAIL_USER,  // 邮箱账号\n              pass: mailer.MAIL_PASS,  // 授权码\n          },\n          ignoreTLS: true,\n        };\n      },\n      inject: [ConfigService],\n    })\n  ],\n  exports:[ConfigModule,MailerModule],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FeatureModule.html":{"url":"modules/FeatureModule.html","title":"module - FeatureModule","body":"\n                   \n\n\n\n\n    Modules\n    FeatureModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FeatureModule\n\n\n\ncluster_FeatureModule_imports\n\n\n\ncluster_FeatureModule_exports\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nFeatureModule\n\nFeatureModule\n\nFeatureModule -->\n\nArticleModule->FeatureModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nFeatureModule -->\n\nAuthModule->FeatureModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nFeatureModule -->\n\nUsersModule->FeatureModule\n\n\n\n\n\nArticleModule \n\nArticleModule \n\nArticleModule  -->\n\nFeatureModule->ArticleModule \n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nFeatureModule->AuthModule \n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nFeatureModule->UsersModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/feature/feature.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ArticleModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ArticleModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersModule } from './users/users.module';\nimport { ArticleModule } from './article/article.module';\nimport { AuthModule } from './auth/auth.module';\nimport { LogServive } from '../common/log/log.service';\n\n@Module({\n  imports: [\n    UsersModule,\n    AuthModule,\n    ArticleModule,\n  ],\n  exports:[\n    UsersModule,\n    AuthModule,\n    ArticleModule,\n  ]\n})\nexport class FeatureModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/exceptions/http-exception.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/core/exceptions/http-exception.filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost,BadRequestException, HttpException,HttpStatus } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { ApiException } from './api.exception';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n    // console.log('exception',exception.message);\n    // 错误码400 判断是否有管道的验证信息\n    if (status === HttpStatus.BAD_REQUEST) {\n      let msg = exception.message.error;\n      let message = exception.message.message;\n      if(message) {\n        if(Array.isArray(message)) {\n          message.forEach((val,key)=>{\n            if(val['constraints']['matches']) {\n              msg = val['constraints']['matches'];\n              return false;\n            }\n          })\n        } else {\n          msg = message;\n        }\n      }\n     \n      response\n        .status(200)\n        .json({\n          code: status,\n          msg,\n        });\n     }  else if (exception instanceof ApiException) {\n      response\n        .status(200)\n        .json({\n          code: exception.getErrorCode(),\n          msg: exception.getErrorMessage(),\n        });\n    } else {\n      response\n      .status(200)\n      .json({\n        code: status,\n        msg: exception.message.error,\n      });\n     }\n   } \n   \n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IOption.html":{"url":"interfaces/IOption.html","title":"interface - IOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mailer/mailer.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        auth\n                                \n                                \n                                        host\n                                \n                                \n                                        ignoreTLS\n                                \n                                \n                                        port\n                                \n                                \n                                        secure\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth\n                                    \n                                \n                                \n                                    \n                                        auth:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreTLS\n                                    \n                                \n                                \n                                    \n                                        ignoreTLS:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:     number | string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secure\n                                    \n                                \n                                \n                                    \n                                        secure:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IOption {\n    host: string,  // 邮箱smtp地址\n    port: number | string, // 端口号\n    secure: boolean, // true for 465, false for other ports\n    auth: {\n      user: string, // 邮箱账号\n      pass: string // smtp密码\n    },\n    ignoreTLS: boolean; // 忽略TLS\n}\n\nexport interface ISendMail{\n  from: string, // sender address\n  to: string, // list of receivers\n  subject:string, // Subject line\n  text?: string, // plain text body\n  html?: string // html body\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISendMail.html":{"url":"interfaces/ISendMail.html","title":"interface - ISendMail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISendMail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mailer/mailer.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        from\n                                \n                                \n                                            Optional\n                                        html\n                                \n                                \n                                        subject\n                                \n                                \n                                            Optional\n                                        text\n                                \n                                \n                                        to\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IOption {\n    host: string,  // 邮箱smtp地址\n    port: number | string, // 端口号\n    secure: boolean, // true for 465, false for other ports\n    auth: {\n      user: string, // 邮箱账号\n      pass: string // smtp密码\n    },\n    ignoreTLS: boolean; // 忽略TLS\n}\n\nexport interface ISendMail{\n  from: string, // sender address\n  to: string, // list of receivers\n  subject:string, // Subject line\n  text?: string, // plain text body\n  html?: string // html body\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feature/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/feature/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/feature/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feature/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/feature/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/feature/auth/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    console.log(username);\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogServive.html":{"url":"injectables/LogServive.html","title":"injectable - LogServive","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogServive\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/log/log.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/log/log.service.ts:41\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            log\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    log(msg)\n                \n            \n\n\n            \n                \n                    Defined in src/common/log/log.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/log/log.service.ts:41\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { configure, getLogger,connectLogger } from 'log4js';\nimport { join } from 'path';\nimport { Injectable, Global } from '@nestjs/common';\n\nconfigure({\n  appenders: { \n    stdout: {//控制台输出\n      type: 'stdout'\n    },\n    req: {//请求日志\n        type: 'dateFile',\n        filename: 'logs/reqlog/',\n        pattern: 'req-yyyy-MM-dd.log',\n        alwaysIncludePattern: true\n    },\n    err: {//错误日志\n        type: 'dateFile',\n        filename: 'logs/errlog/',\n        pattern: 'err-yyyy-MM-dd.log',\n        alwaysIncludePattern: true\n    },\n    oth: {//其他日志\n        type: 'dateFile',\n        filename: 'logs/othlog/',\n        pattern: 'oth-yyyy-MM-dd.log',\n        alwaysIncludePattern: true\n    }\n\n  },\n  pm2: true,\n  categories: { \n    default: { appenders: ['stdout', 'req'], level: 'debug' },\n    err: { appenders: ['stdout', 'err'], level: 'error' },\n    oth: { appenders: ['stdout', 'oth'], level: 'info' }\n  }\n});\n\n@Global()\n@Injectable()\nexport class LogServive {\n  private readonly logger: any;\n  constructor(){\n    this.logger = getLogger('default');\n  }\n  public log(msg){\n    this.logger.info(msg);\n  }\n  // public err(msg){\n  //   this.logger.error(msg);\n  // }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middleware/logger.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: LogServive)\n                    \n                \n                        \n                            \n                                Defined in src/common/middleware/logger.middleware.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LogServive\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middleware/logger.middleware.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { LogServive } from '../../common/log/log.service';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  constructor(\n    private readonly logger: LogServive,\n  ){}\n  use(req: Request, res: Response, next: Function) {\n    this.logger.log(`====请求====`);\n    this.logger.log(`${JSON.stringify(req.originalUrl)} ${JSON.stringify(req.body)}`);\n    next();\n    this.logger.log(`====响应====`);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feature/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '密码不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/auth/dto/auth.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '用户名不能为空'})@Matches(/^[a-zA-Z0-9\\-_]{5,20}$/i, {message: '用户名不合法'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/auth/dto/auth.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsInt,Matches, IsEmail,IsNotEmpty,NotEquals } from 'class-validator';\nimport {Transform} from 'class-transformer';\nimport { IsEqualsThan } from '../../../core/decorators/validator.decorators';\nexport class LoginDto {\n  @IsNotEmpty({\n    message: '用户名不能为空',\n  })\n  @Matches(/^[a-zA-Z0-9\\-_]{5,20}$/i, {\n    message: '用户名不合法',\n  })\n  readonly username: string;\n  @IsNotEmpty({\n    message: '密码不能为空',\n  })\n  readonly password: string;\n}\n\nexport class ResgisterDto {\n  @IsNotEmpty({\n    message: '用户名不能为空',\n  })\n  @Matches(/^[a-zA-Z0-9\\-_]{5,20}$/i, {\n    message: '用户名不合法',\n  })\n  readonly username: string;\n  @IsNotEmpty({\n    message: '密码不能为空',\n  })\n  readonly password: string;\n  @IsNotEmpty({\n    message: '确认密码不能为空',\n  })\n  @IsEqualsThan('password', {\n    message: '两次密码输入不一致。',\n  })\n  readonly repwd: string;\n  @IsNotEmpty({\n    message: '邮箱不能为空',\n  })\n  @IsEmail({}, {\n    message: '邮箱不合法',\n  })\n  readonly email: string;\n}\n\n\nexport class ActiveRegisterDto {\n  @IsNotEmpty({\n    message: '用户名不能为空',\n  })\n  @Matches(/^[a-zA-Z0-9\\-_]{5,20}$/i, {\n    message: '用户名不合法',\n  })\n  readonly username: string;\n  @IsNotEmpty({\n    message: '邮箱不能为空',\n  })\n  readonly key: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/services/mail.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                from\n                            \n                            \n                                    Private\n                                    Readonly\n                                host\n                            \n                            \n                                    Private\n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendActiveMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailer: MailerService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/common/services/mail.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailer\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendActiveMail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendActiveMail(to: string, token: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/services/mail.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            from\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/mail.service.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            host\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/mail.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/services/mail.service.ts:9\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { MailerService } from '../../core/mailer/mailer.service';\nimport { ConfigService } from '../../core/config/config.service';\n\n@Injectable()\nexport class MailService {\n  private readonly from: string;\n  private readonly name: string;\n  private readonly host: string;\n  constructor(\n    private readonly mailer: MailerService,\n    private readonly configService: ConfigService,\n  ){\n    this.name = 'XX社区';\n    this.host = `${this.configService.getString('HOST')}:${this.configService.getString('PORT')}`;\n    this.from = `${this.name} `;\n  }\n async sendActiveMail(to: string, token: string, username: string) {\n    const name = this.name;\n    const subject = `${name}帐号激活`;\n    const html = `您好：${username}\n        我们收到您在${name}的注册信息，请点击下面的链接来激活帐户：\n        token:${token}\n        若您没有在${name}填写过注册信息，说明有人滥用了您的电子邮箱，请删除此邮件，我们对给您造成的打扰感到抱歉。\n        ${name} 谨上。`;\n    try{\n      return await this.mailer.sendMail({\n        from: this.from,\n        to,\n        subject,\n        html,\n    });\n    } catch (e) {\n      return e;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailerModule.html":{"url":"modules/MailerModule.html","title":"module - MailerModule","body":"\n                   \n\n\n\n\n    Modules\n    MailerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/core/mailer/mailer.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: T)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mailer/mailer.module.ts:18\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    同步引导邮箱模块\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        邮箱模块的选项\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRootAsync\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRootAsync(options)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mailer/mailer.module.ts:35\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    异步引导邮箱模块\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        邮箱模块的选项\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        /*\n * @Author: your name\n * @Date: 2019-12-18 17:16:01\n * @LastEditTime: 2019-12-18 19:17:16\n * @LastEditors: your name\n * @Description: In User Settings Edit\n * @FilePath: \\nestjs\\src\\core\\mailer\\mailer.module.ts\n */\nimport { DynamicModule, Module, Provider, Global } from '@nestjs/common';\nimport { MailerService } from './mailer.service';\n\n@Module({})\nexport class MailerModule {\n     /**\n     * 同步引导邮箱模块\n     * @param options 邮箱模块的选项\n     */\n    static forRoot(options: T): DynamicModule {\n        return {\n            module: MailerModule,\n            providers: [\n                { \n                    provide: MailerService, \n                    useValue: options \n                },\n            ],\n            exports: [MailerService],\n        };\n    }\n\n    /**\n     * 异步引导邮箱模块\n     * @param options 邮箱模块的选项\n     */\n    static forRootAsync(options): DynamicModule {\n        return {\n            module: MailerModule,\n            imports: options.imports || [],\n            providers: [{\n                provide: 'MAIL_OPTION',\n                useFactory: options.useFactory,\n                inject: options.inject,\n                },\n                MailerService,\n            ],\n            exports: [MailerService],\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerService.html":{"url":"injectables/MailerService.html","title":"injectable - MailerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mailer/mailer.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                transporter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(option: IOption)\n                    \n                \n                        \n                            \n                                Defined in src/core/mailer/mailer.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        option\n                                                  \n                                                        \n                                                                        IOption\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            sendMail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMail(sendMailOption: ISendMail)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mailer/mailer.service.ts:28\n                \n            \n\n\n            \n                \n                    发送邮件\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sendMailOption\n                                    \n                                                ISendMail\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transporter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mailer/mailer.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nconst nodemailer = require(\"nodemailer\");\nimport { IOption, ISendMail } from './mailer.interface';\n\n\n@Injectable()\nexport class MailerService {\n  transporter: any;\n  constructor(@Inject('MAIL_OPTION') readonly option: IOption) {\n    // 初始化\n    this.transporter = nodemailer.createTransport(option);\n  }\n  /**\n   *\n   *  发送邮件\n   * @param {ISendMail} sendMailOption\n   * @returns\n   * @memberof MailerService\n   */\n  public async sendMail(sendMailOption:ISendMail) {\n    return new Promise(async (resolve,reject)=>{\n       this.transporter.sendMail(sendMailOption, (error, info) => {\n        if (error) {\n          console.log('sendMail error',error);\n          reject(error);\n        } else {\n          console.log('Message %s sent: %s',  info.messageId, info.response);\n          resolve('success');\n        }\n        this.transporter.close();\n        // only needed when using pooled connections\n      });\n    })\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResgisterDto.html":{"url":"classes/ResgisterDto.html","title":"class - ResgisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResgisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feature/auth/dto/auth.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                            \n                                    Readonly\n                                repwd\n                            \n                            \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '邮箱不能为空'})@IsEmail({}, {message: '邮箱不合法'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/auth/dto/auth.dto.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '密码不能为空'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/auth/dto/auth.dto.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            repwd\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '确认密码不能为空'})@IsEqualsThan('password', {message: '两次密码输入不一致。'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/auth/dto/auth.dto.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty({message: '用户名不能为空'})@Matches(/^[a-zA-Z0-9\\-_]{5,20}$/i, {message: '用户名不合法'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/auth/dto/auth.dto.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsInt,Matches, IsEmail,IsNotEmpty,NotEquals } from 'class-validator';\nimport {Transform} from 'class-transformer';\nimport { IsEqualsThan } from '../../../core/decorators/validator.decorators';\nexport class LoginDto {\n  @IsNotEmpty({\n    message: '用户名不能为空',\n  })\n  @Matches(/^[a-zA-Z0-9\\-_]{5,20}$/i, {\n    message: '用户名不合法',\n  })\n  readonly username: string;\n  @IsNotEmpty({\n    message: '密码不能为空',\n  })\n  readonly password: string;\n}\n\nexport class ResgisterDto {\n  @IsNotEmpty({\n    message: '用户名不能为空',\n  })\n  @Matches(/^[a-zA-Z0-9\\-_]{5,20}$/i, {\n    message: '用户名不合法',\n  })\n  readonly username: string;\n  @IsNotEmpty({\n    message: '密码不能为空',\n  })\n  readonly password: string;\n  @IsNotEmpty({\n    message: '确认密码不能为空',\n  })\n  @IsEqualsThan('password', {\n    message: '两次密码输入不一致。',\n  })\n  readonly repwd: string;\n  @IsNotEmpty({\n    message: '邮箱不能为空',\n  })\n  @IsEmail({}, {\n    message: '邮箱不合法',\n  })\n  readonly email: string;\n}\n\n\nexport class ActiveRegisterDto {\n  @IsNotEmpty({\n    message: '用户名不能为空',\n  })\n  @Matches(/^[a-zA-Z0-9\\-_]{5,20}$/i, {\n    message: '用户名不合法',\n  })\n  readonly username: string;\n  @IsNotEmpty({\n    message: '邮箱不能为空',\n  })\n  readonly key: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_imports\n\n\n\ncluster_ServicesModule_exports\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nCoreModule\n\nCoreModule\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nCoreModule->ServicesModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nServicesModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nServicesModule -->\n\nMailService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/services/services.modules.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * @Author: your name\n * @Date: 2019-12-23 17:32:32\n * @LastEditTime: 2019-12-23 17:38:11\n * @LastEditors: your name\n * @Description: In User Settings Edit\n * @FilePath: \\nestjs\\src\\common\\services\\services.modules.ts\n */\nimport { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { CoreModule } from '../../core/core.module';\n\n@Module({\n  imports:[CoreModule],\n  providers:[\n    MailService,\n  ],\n  exports:[\n    MailService\n  ]\n})\nexport class ServicesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TestMiddleware.html":{"url":"injectables/TestMiddleware.html","title":"injectable - TestMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TestMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middleware/test.middleware.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/middleware/test.middleware.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            use\n                        \n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middleware/test.middleware.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { LogServive } from '../log/log.service';\n\n@Injectable()\nexport class TestMiddleware implements NestMiddleware {\n  constructor(\n    \n  ){}\n  use(req: Request, res: Response, next: Function) {\n    console.log('test1');\n    next();\n    console.log('text2')\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feature/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/user\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInfo(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@Get('info')\n                \n            \n\n            \n                \n                    Defined in src/feature/users/users.controller.ts:22\n                \n            \n\n\n            \n                \n                    获取登录用户的信息\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Controller,Post,Request, Get, Param, Res,HttpStatus,UseGuards, Response} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport {AuthGuard} from '@nestjs/passport';\n\n@Controller('api/user')\nexport class UserController {\n  constructor(\n    private readonly userService: UsersService,\n  ) {}\n\n\n  /**\n   * \n   * 获取登录用户的信息\n   * @param {*} req\n   * @returns\n   * @memberof UserController\n   */\n  @UseGuards(AuthGuard('jwt'))\n  @Get('info')\n  async getInfo(@Request() req) {\n    if(req.user && req.user.username) {\n      const data = await this.userService.findOne({\n        username:req.user.username\n      });\n      delete data.password;\n      console.log('getInfo',data);\n      return {\n        code: 200,\n        data\n      };\n    }\n    \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feature/users/user.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { BaseInterface } from '../../common/interfaces/interface';\n\nexport interface UserInterface extends BaseInterface {\n  username: string // 用户名\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Users.html":{"url":"classes/Users.html","title":"class - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feature/users/users.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                avatar\n                            \n                            \n                                create_time\n                            \n                            \n                                decs\n                            \n                            \n                                email\n                            \n                            \n                                fans_num\n                            \n                            \n                                focus_num\n                            \n                            \n                                github_accesstoken\n                            \n                            \n                                github_id\n                            \n                            \n                                github_username\n                            \n                            \n                                id\n                            \n                            \n                                nick_name\n                            \n                            \n                                password\n                            \n                            \n                                type\n                            \n                            \n                                update_time\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'text'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create_time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            decs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 200, default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fans_num\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus_num\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({type: 'int', default: 0})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            github_accesstoken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50, default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            github_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50, default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            github_username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50, default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nick_name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 100, default: ''})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50, default: 'user'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update_time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column({length: 50})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/feature/users/users.entity.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';\n@Entity()\nexport class Users {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 50 })\n  username: string;\n\n  @Column({ length: 100,default:'' })\n  nick_name: string;\n\n  @Column({length:200,default:''})\n  decs: string;\n\n  @Column({type:'int',default:0})\n  fans_num: number;\n\n  @Column({type:'int',default:0})\n  focus_num: number;\n\n  @Column({\n   type:'text',\n  })\n  avatar: string\n\n  @Column({length:50,default:'user'})\n  type: string\n\n  @Column({length:50})\n  password: string\n\n  @Column({length:50})\n  email:string\n\n  @Column({type:'int',default:0})\n  active: number\n\n  @Column({length:50,default:''})\n  github_id:string\n\n  @Column({length:50,default:''})\n  github_username:string\n\n  @Column({length:50,default:''})\n  github_accesstoken:string\n\n  @CreateDateColumn({})\n  create_time:Date\n\n  @UpdateDateColumn({})\n  update_time:Date\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nCommonModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/feature/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommonModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\n * @Author: your name\n * @Date: 2019-12-02 15:03:49\n * @LastEditTime : 2019-12-23 17:38:49\n * @LastEditors  : Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\nestjs\\src\\feature\\users\\users.module.ts\n */\n\nimport { Module } from '@nestjs/common';\nimport { UserController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { PassportModule } from '@nestjs/passport';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Users } from './users.entity';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from '../auth/constants';\nimport { CommonModule } from '../../common/common.module';\n@Module({\n  imports: [\n    CommonModule,\n    TypeOrmModule.forFeature([Users]),\n    PassportModule, // 默认策略，之后在装饰器中使用就不需要传递\n    JwtModule.register({\n        secret: jwtConstants.secret, // 设置secret\n        signOptions: { expiresIn: '3600' }, // 设置token的属性，时间为3600*10就是十小时,其余配置可以看jwt的一些相关配置\n    }),\n  ],\n  controllers:[\n    UserController\n  ],\n  providers:[\n    UsersService,\n  ],\n  exports:[\n    UsersService,\n  ]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/feature/users/users.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                repository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/feature/users/users.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(data)\n                \n            \n\n\n            \n                \n                    Defined in src/feature/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    find(query)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:35\n\n                \n            \n\n\n            \n                \n                    条件查找 返回多个\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:15\n\n                \n            \n\n\n            \n                \n                    查找全部\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(query)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:25\n\n                \n            \n\n\n            \n                \n                    条件查找返回一个数据\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            save\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    save(data)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repository\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:8\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Users } from './users.entity';\nimport { BaseService } from '../../common/mysql/base.service';\n\n@Injectable()\nexport class UsersService extends BaseService {\n  constructor(\n    @InjectRepository(Users)\n    private readonly usersRepository: Repository,\n  ) {\n    super();\n    this.repository = this.usersRepository;\n  }\n  create(data) {\n    let user = new Users();\n    user = {\n      ...data,\n    }\n    return this.repository.save(user)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interfaces/interface.ts\n            \n            interface\n            BaseInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/log/log.service.ts\n            \n            injectable\n            LogServive\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/middleware/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/middleware/test.middleware.ts\n            \n            injectable\n            TestMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/mysql/base.service.ts\n            \n            injectable\n            BaseService\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/common/services/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/util.ts\n            \n            function\n            diffEncryptMD5\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/util.ts\n            \n            function\n            encryptMD5\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/util.ts\n            \n            variable\n            crypto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/util.ts\n            \n            variable\n            md5\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/app.ts\n            \n            variable\n            SECRET\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/config/config.service.ts\n            \n            class\n            ConfigService\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/core/decorators/validator.decorators.ts\n            \n            function\n            IsEqualsThan\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/decorators/validator.decorators.ts\n            \n            variable\n            validator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/exceptions/api.exception.ts\n            \n            class\n            ApiException\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/exceptions/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/mailer/mailer.interface.ts\n            \n            interface\n            IOption\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/mailer/mailer.interface.ts\n            \n            interface\n            ISendMail\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/mailer/mailer.service.ts\n            \n            injectable\n            MailerService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/core/mailer/mailer.service.ts\n            \n            variable\n            nodemailer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/feature/article/article.controller.ts\n            \n            controller\n            ArticleController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/feature/article/article.service.ts\n            \n            injectable\n            ArticleService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/feature/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/feature/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/feature/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/feature/auth/dto/auth.dto.ts\n            \n            class\n            ActiveRegisterDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/feature/auth/dto/auth.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/feature/auth/dto/auth.dto.ts\n            \n            class\n            ResgisterDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/feature/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/feature/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/feature/users/user.interface.ts\n            \n            interface\n            UserInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/feature/users/users.controller.ts\n            \n            controller\n            UserController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/feature/users/users.entity.ts\n            \n            class\n            Users\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/feature/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^16.1.8\n        \n            @nestjs/common : ^6.7.2\n        \n            @nestjs/core : ^6.7.2\n        \n            @nestjs/jwt : ^6.1.1\n        \n            @nestjs/passport : ^6.1.0\n        \n            @nestjs/platform-express : ^6.7.2\n        \n            @nestjs/typeorm : ^6.2.0\n        \n            @types/express : ^4.17.1\n        \n            @types/passport-local : ^1.0.33\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.11.0\n        \n            connect-redis : ^4.0.3\n        \n            cookie-parser : ^1.4.4\n        \n            csurf : ^1.10.0\n        \n            dotenv : ^8.2.0\n        \n            express-session : ^1.17.0\n        \n            hbs : ^4.0.6\n        \n            joi : ^14.3.1\n        \n            log4js : ^6.1.2\n        \n            mysql : ^2.17.1\n        \n            node-mailer : ^0.1.1\n        \n            nodemailer : ^6.4.2\n        \n            passport : ^0.4.0\n        \n            passport-http-bearer : ^1.0.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.0\n        \n            rxjs : ^6.5.3\n        \n            typeorm : ^0.2.20\n        \n            utility : ^1.16.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiErrorCode   (src/.../api-error-code.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/enums/api-error-code.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiErrorCode\n                    \n                \n                        \n                            \n                                 TIMEOUT\n                            \n                        \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : 200\n                            \n                        \n                        \n                            \n                                 USER_ID_INVALID\n                            \n                        \n                        \n                            \n                                Value : 10001\n                            \n                        \n                        \n                            \n                                 USERNAME_INVALID\n                            \n                        \n                        \n                            \n                                Value : 10002\n                            \n                        \n                        \n                            \n                                 EMAIL_INVALID\n                            \n                        \n                        \n                            \n                                Value : 10003\n                            \n                        \n                        \n                            \n                                 USER_NO_EXIT\n                            \n                        \n                        \n                            \n                                Value : 10004\n                            \n                        \n                        \n                            \n                                 TOEKN_INVALID\n                            \n                        \n                        \n                            \n                                Value : 10005\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            diffEncryptMD5   (src/.../util.ts)\n                        \n                        \n                            encryptMD5   (src/.../util.ts)\n                        \n                        \n                            IsEqualsThan   (src/.../validator.decorators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            diffEncryptMD5\n                        \n                        \n                    \n                \n            \n            \n                \ndiffEncryptMD5(source, target)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            encryptMD5\n                        \n                        \n                    \n                \n            \n            \n                \nencryptMD5(key)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/core/decorators/validator.decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            IsEqualsThan\n                        \n                        \n                    \n                \n            \n            \n                \nIsEqualsThan(property, validationOptions?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validationOptions\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov论坛后台 模仿简书\nnestjs+mysql\n开发的功能\n\n登陆和注册 登出功能 ❎\n个人信息 ❎\n发布文章 ❎\n评论文章 ❎\n文章列表 ❎\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FeatureModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_exports\n\n\n\ncluster_ArticleModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CommonModule\n\n\n\ncluster_CommonModule_imports\n\n\n\ncluster_CommonModule_exports\n\n\n\ncluster_ConfigModule\n\n\n\ncluster_ConfigModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_FeatureModule\n\n\n\ncluster_FeatureModule_exports\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_exports\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nCommonModule\n\nCommonModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nCommonModule->UsersModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCommonModule->AuthModule\n\n\n\n\n\nServicesModule \n\nServicesModule \n\nServicesModule  -->\n\nCommonModule->ServicesModule \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nCoreModule->ServicesModule\n\n\n\n\n\nConfigModule \n\nConfigModule \n\nConfigModule  -->\n\nCoreModule->ConfigModule \n\n\n\n\n\nMailerModule \n\nMailerModule \n\nMailerModule  -->\n\nCoreModule->MailerModule \n\n\n\n\n\nFeatureModule\n\nFeatureModule\n\nAppModule -->\n\nFeatureModule->AppModule\n\n\n\n\n\nArticleModule \n\nArticleModule \n\nArticleModule  -->\n\nFeatureModule->ArticleModule \n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nFeatureModule->AuthModule \n\n\n\n\n\nUsersModule \n\nUsersModule \n\nUsersModule  -->\n\nFeatureModule->UsersModule \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nLogServive\n\nLogServive\n\nCommonModule -->\n\nLogServive->CommonModule\n\n\n\nAppModule -->\n\nLogServive->AppModule\n\n\n\nAuthModule -->\n\nLogServive->AuthModule\n\n\n\n\n\nLoggerMiddleware\n\nLoggerMiddleware\n\nAppModule -->\n\nLoggerMiddleware->AppModule\n\n\n\n\n\nArticleService \n\nArticleService \n\n\n\nArticleModule\n\nArticleModule\n\nFeatureModule -->\n\nArticleModule->FeatureModule\n\n\n\nArticleService  -->\n\nArticleModule->ArticleService \n\n\n\n\n\nArticleService\n\nArticleService\n\nArticleModule -->\n\nArticleService->ArticleModule\n\n\n\nFeatureModule -->\n\nUsersModule->FeatureModule\n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\nFeatureModule -->\n\nAuthModule->FeatureModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\nCommonModule -->\n\nServicesModule->CommonModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nServicesModule->MailService \n\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nConfigModule\n\nConfigModule\n\nCoreModule -->\n\nConfigModule->CoreModule\n\n\n\nConfigService  -->\n\nConfigModule->ConfigService \n\n\n\n\n\nMailerModule\n\nMailerModule\n\nCoreModule -->\n\nMailerModule->CoreModule\n\n\n\n\n\nMailService\n\nMailService\n\nServicesModule -->\n\nMailService->ServicesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EnvConfig   (src/.../config.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/core/config/config.service.ts\n    \n    \n        \n            \n                \n                    \n                    EnvConfig\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            crypto   (src/.../util.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            md5   (src/.../util.ts)\n                        \n                        \n                            nodemailer   (src/.../mailer.service.ts)\n                        \n                        \n                            SECRET   (src/.../app.ts)\n                        \n                        \n                            validator   (src/.../validator.decorators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/util.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            crypto\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('crypto')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            md5\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (string: string | number): string => {\n  const md5 = crypto.createHash('md5');\n  return md5.update(string).digest('hex');\n}\n                        \n                    \n\n                \n                    \n                        md5加密\n\n                    \n                \n\n            \n        \n\n    src/feature/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  secret: '1AGy4bCUoECDZ4yI6h8DxHDwgj84EqStMNyab8nPChQ=',\n}\n                        \n                    \n\n                \n                    \n                        jwt的密匙\n\n                    \n                \n\n            \n        \n\n    src/core/mailer/mailer.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            nodemailer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require(\"nodemailer\")\n                        \n                    \n\n\n            \n        \n\n    src/config/app.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SECRET\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '1AGy4bCU4EqStMNyab8nPChQ='\n                        \n                    \n\n\n            \n        \n\n    src/core/decorators/validator.decorators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            validator\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Validator()\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
